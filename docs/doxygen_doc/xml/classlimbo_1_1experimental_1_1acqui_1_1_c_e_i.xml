<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i" kind="class" language="C++" prot="public">
    <compoundname>limbo::experimental::acqui::CEI</compoundname>
    <includes refid="cei_8hpp" local="no">limbo/experimental/acqui/cei.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Params</type>
      </param>
      <param>
        <type>typename Model</type>
      </param>
      <param>
        <type>typename ConstraintModel</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1ad0fd5d436de356497ea8b293a47326a6" prot="private" static="no" mutable="no">
        <type>const Model &amp;</type>
        <definition>const Model&amp; limbo::experimental::acqui::CEI&lt; Params, Model, ConstraintModel &gt;::_model</definition>
        <argsstring></argsstring>
        <name>_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="104" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1aaf7242d80a4d628c465a1a2de25ea01f" prot="private" static="no" mutable="no">
        <type>const ConstraintModel &amp;</type>
        <definition>const ConstraintModel&amp; limbo::experimental::acqui::CEI&lt; Params, Model, ConstraintModel &gt;::_constraint_model</definition>
        <argsstring></argsstring>
        <name>_constraint_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="105" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a5418a21dc4d1d98b6099799d84e48486" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>limbo::experimental::acqui::CEI&lt; Params, Model, ConstraintModel &gt;::CEI</definition>
        <argsstring>(const Model &amp;model, const ConstraintModel &amp;constraint_model, int iteration=0)</argsstring>
        <name>CEI</name>
        <param>
          <type>const Model &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const ConstraintModel &amp;</type>
          <declname>constraint_model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iteration</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="67" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="67" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a096fc8105829ffc2d4fffc8df7dead01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t limbo::experimental::acqui::CEI&lt; Params, Model, ConstraintModel &gt;::dim_in</definition>
        <argsstring>() const </argsstring>
        <name>dim_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="70" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1aa82f5ffd825faa8df476d46f58fb9e48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t limbo::experimental::acqui::CEI&lt; Params, Model, ConstraintModel &gt;::dim_out</definition>
        <argsstring>() const </argsstring>
        <name>dim_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="72" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a225353e2dad5fdbdc172a951fe317c61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double limbo::experimental::acqui::CEI&lt; Params, Model, ConstraintModel &gt;::operator()</definition>
        <argsstring>(const Eigen::VectorXd &amp;v, const AggregatorFunction &amp;afun) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="75" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="75" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a46ac29655e345933e15b920e4d261f78" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double limbo::experimental::acqui::CEI&lt; Params, Model, ConstraintModel &gt;::_pf</definition>
        <argsstring>(const Eigen::VectorXd &amp;v, const AggregatorFunction &amp;afun) const </argsstring>
        <name>_pf</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="108" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="108" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" line="65" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/cei.hpp" bodystart="65" bodyend="123"/>
    <listofallmembers>
      <member refid="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1aaf7242d80a4d628c465a1a2de25ea01f" prot="private" virt="non-virtual"><scope>limbo::experimental::acqui::CEI</scope><name>_constraint_model</name></member>
      <member refid="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1ad0fd5d436de356497ea8b293a47326a6" prot="private" virt="non-virtual"><scope>limbo::experimental::acqui::CEI</scope><name>_model</name></member>
      <member refid="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a46ac29655e345933e15b920e4d261f78" prot="private" virt="non-virtual"><scope>limbo::experimental::acqui::CEI</scope><name>_pf</name></member>
      <member refid="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a5418a21dc4d1d98b6099799d84e48486" prot="public" virt="non-virtual"><scope>limbo::experimental::acqui::CEI</scope><name>CEI</name></member>
      <member refid="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a096fc8105829ffc2d4fffc8df7dead01" prot="public" virt="non-virtual"><scope>limbo::experimental::acqui::CEI</scope><name>dim_in</name></member>
      <member refid="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1aa82f5ffd825faa8df476d46f58fb9e48" prot="public" virt="non-virtual"><scope>limbo::experimental::acqui::CEI</scope><name>dim_out</name></member>
      <member refid="classlimbo_1_1experimental_1_1acqui_1_1_c_e_i_1a225353e2dad5fdbdc172a951fe317c61" prot="public" virt="non-virtual"><scope>limbo::experimental::acqui::CEI</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
