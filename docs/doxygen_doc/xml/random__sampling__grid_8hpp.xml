<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="random__sampling__grid_8hpp" kind="file" language="C++">
    <compoundname>random_sampling_grid.hpp</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes refid="macros_8hpp" local="no">limbo/tools/macros.hpp</includes>
    <includes refid="random__generator_8hpp" local="no">limbo/tools/random_generator.hpp</includes>
    <includedby refid="init_8hpp" local="no">/tmp/doc_limbo/limbo/src/limbo/init.hpp</includedby>
    <incdepgraph>
      <node id="666">
        <label>list</label>
      </node>
      <node id="660">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="675">
        <label>functional</label>
      </node>
      <node id="678">
        <label>iterator</label>
      </node>
      <node id="673">
        <label>cstdint</label>
      </node>
      <node id="667">
        <label>stdlib.h</label>
      </node>
      <node id="664">
        <label>cmath</label>
      </node>
      <node id="658">
        <label>Eigen/Core</label>
      </node>
      <node id="662">
        <label>limbo/tools/random_generator.hpp</label>
        <link refid="random__generator_8hpp"/>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
      </node>
      <node id="668">
        <label>random</label>
      </node>
      <node id="665">
        <label>ctime</label>
      </node>
      <node id="657">
        <label>/tmp/doc_limbo/limbo/src/limbo/init/random_sampling_grid.hpp</label>
        <link refid="random_sampling_grid.hpp"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
      </node>
      <node id="669">
        <label>utility</label>
      </node>
      <node id="674">
        <label>array</label>
      </node>
      <node id="671">
        <label>limbo/tools/rand_utils.hpp</label>
        <link refid="rand__utils_8hpp"/>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
      </node>
      <node id="663">
        <label>cstdlib</label>
      </node>
      <node id="661">
        <label>iostream</label>
      </node>
      <node id="672">
        <label>cstddef</label>
      </node>
      <node id="670">
        <label>mutex</label>
      </node>
      <node id="679">
        <label>chrono</label>
      </node>
      <node id="680">
        <label>thread</label>
      </node>
      <node id="677">
        <label>type_traits</label>
      </node>
      <node id="681">
        <label>algorithm</label>
      </node>
      <node id="676">
        <label>initializer_list</label>
      </node>
      <node id="659">
        <label>limbo/tools/macros.hpp</label>
        <link refid="macros_8hpp"/>
        <childnode refid="660" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="683">
        <label>/tmp/doc_limbo/limbo/src/limbo/init.hpp</label>
        <link refid="init_8hpp"/>
        <childnode refid="684" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>/tmp/doc_limbo/limbo/src/limbo/limbo.hpp</label>
        <link refid="limbo_8hpp"/>
      </node>
      <node id="682">
        <label>/tmp/doc_limbo/limbo/src/limbo/init/random_sampling_grid.hpp</label>
        <link refid="random_sampling_grid.hpp"/>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlimbo_1_1defaults_1_1init__randomsamplinggrid" prot="public">limbo::defaults::init_randomsamplinggrid</innerclass>
    <innerclass refid="structlimbo_1_1init_1_1_random_sampling_grid" prot="public">limbo::init::RandomSamplingGrid</innerclass>
    <innernamespace refid="namespacelimbo">limbo</innernamespace>
    <innernamespace refid="namespacelimbo_1_1defaults">limbo::defaults</innernamespace>
    <innernamespace refid="namespacelimbo_1_1init">limbo::init</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LIMBO_INIT_RANDOM_SAMPLING_GRID_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIMBO_INIT_RANDOM_SAMPLING_GRID_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="macros_8hpp" kindref="compound">limbo/tools/macros.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random__generator_8hpp" kindref="compound">limbo/tools/random_generator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelimbo" kindref="compound">limbo</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">defaults<sp/>{</highlight></codeline>
<codeline lineno="11" refid="structlimbo_1_1defaults_1_1init__randomsamplinggrid" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlimbo_1_1defaults_1_1init__randomsamplinggrid" kindref="compound">init_randomsamplinggrid</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__init__defaults_1ga5658d4c9a618c34b465ab42491d0062f" kindref="member">BO_PARAM</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>samples,<sp/>10);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__init__defaults_1ga5658d4c9a618c34b465ab42491d0062f" kindref="member">BO_PARAM</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>bins,<sp/>5);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="group__par__tools_1ga1d650a019b6c1bb551cb42f1c3f5ef82" kindref="member">init</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="31" refid="structlimbo_1_1init_1_1_random_sampling_grid" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlimbo_1_1init_1_1_random_sampling_grid" kindref="compound">RandomSamplingGrid</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StateFunction,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AggregatorFunction,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Opt&gt;</highlight></codeline>
<codeline lineno="33" refid="structlimbo_1_1init_1_1_random_sampling_grid_1a6fd277031f69bf9da891b5f35065c369" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1init_1_1_random_sampling_grid_1a6fd277031f69bf9da891b5f35065c369" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateFunction&amp;<sp/>seval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AggregatorFunction&amp;,<sp/>Opt&amp;<sp/>opt)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="34"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlimbo_1_1tools_1_1_random_generator" kindref="compound">tools::rgen_int_t</ref><sp/>rgen(0,<sp/>Params::init_randomsamplinggrid::bins());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Params::init_randomsamplinggrid::samples();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>new_sample(StateFunction::dim_in);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>StateFunction::dim_in;<sp/>i++)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_sample[i]<sp/>=<sp/>rgen.<ref refid="classlimbo_1_1tools_1_1_random_generator_1a8428af24ab2e4eb744563d12180b6246" kindref="member">rand</ref>()<sp/>/<sp/>double(Params::init_randomsamplinggrid::bins());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.eval_and_add(seval,<sp/>new_sample);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/tmp/doc_limbo/limbo/src/limbo/init/random_sampling_grid.hpp"/>
  </compounddef>
</doxygen>
