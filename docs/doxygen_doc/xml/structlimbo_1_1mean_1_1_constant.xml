<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="structlimbo_1_1mean_1_1_constant" kind="struct" language="C++" prot="public">
    <compoundname>limbo::mean::Constant</compoundname>
    <includes refid="constant_8hpp" local="no">limbo/mean/constant.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Params</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlimbo_1_1mean_1_1_constant_1a15cabf01ce91422e74ff8507ef0200ea" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t limbo::mean::Constant&lt; Params &gt;::_dim_out</definition>
        <argsstring></argsstring>
        <name>_dim_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" line="33" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlimbo_1_1mean_1_1_constant_1a263296f6d6b10aa360727137588735f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>limbo::mean::Constant&lt; Params &gt;::Constant</definition>
        <argsstring>(size_t dim_out=1)</argsstring>
        <name>Constant</name>
        <param>
          <type>size_t</type>
          <declname>dim_out</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" line="24" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1mean_1_1_constant_1a6ea7d6a07dfb9a45cefe9717dd25030b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GP</type>
          </param>
        </templateparamlist>
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::mean::Constant&lt; Params &gt;::operator()</definition>
        <argsstring>(const Eigen::VectorXd &amp;v, const GP &amp;) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const GP &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" line="27" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" bodystart="27" bodyend="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A constant mean (the traditionnal choice for Bayesian optimization)</para><para>Parameter:<itemizedlist>
<listitem><para><computeroutput>double constant</computeroutput> (the value of the constant) </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <location file="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" line="23" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/mean/constant.hpp" bodystart="23" bodyend="34"/>
    <listofallmembers>
      <member refid="structlimbo_1_1mean_1_1_constant_1a15cabf01ce91422e74ff8507ef0200ea" prot="private" virt="non-virtual"><scope>limbo::mean::Constant</scope><name>_dim_out</name></member>
      <member refid="structlimbo_1_1mean_1_1_constant_1a263296f6d6b10aa360727137588735f7" prot="public" virt="non-virtual"><scope>limbo::mean::Constant</scope><name>Constant</name></member>
      <member refid="structlimbo_1_1mean_1_1_constant_1a6ea7d6a07dfb9a45cefe9717dd25030b" prot="public" virt="non-virtual"><scope>limbo::mean::Constant</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
