<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classlimbo_1_1acqui_1_1_ehvi" kind="class" language="C++" prot="public">
    <compoundname>limbo::acqui::Ehvi</compoundname>
    <includes refid="acqui_2ehvi_8hpp" local="no">limbo/experimental/acqui/ehvi.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Params</declname>
        <defname>Params</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Model</declname>
        <defname>Model</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlimbo_1_1acqui_1_1_ehvi_1add82bbffb6b0748f68e933540150560a" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; Model &gt; &amp;</type>
        <definition>const std::vector&lt;Model&gt;&amp; limbo::acqui::Ehvi&lt; Params, Model &gt;::_models</definition>
        <argsstring></argsstring>
        <name>_models</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" line="82" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1acqui_1_1_ehvi_1a895aa96e45bce61d05745d32cbec53b4" prot="private" static="no" mutable="no">
        <type>const std::deque&lt; individual * &gt; &amp;</type>
        <definition>const std::deque&lt;individual*&gt;&amp; limbo::acqui::Ehvi&lt; Params, Model &gt;::_pop</definition>
        <argsstring></argsstring>
        <name>_pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" line="83" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1acqui_1_1_ehvi_1aa12bf8d58185b0ec2d2bdd2cbdcfe1e1" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::acqui::Ehvi&lt; Params, Model &gt;::_ref_point</definition>
        <argsstring></argsstring>
        <name>_ref_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" line="84" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlimbo_1_1acqui_1_1_ehvi_1a9868f015ef640e9406022b027a0d7683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>limbo::acqui::Ehvi&lt; Params, Model &gt;::Ehvi</definition>
        <argsstring>(const std::vector&lt; Model &gt; &amp;models, const std::deque&lt; individual * &gt; &amp;pop, const Eigen::VectorXd &amp;ref_point)</argsstring>
        <name>Ehvi</name>
        <param>
          <type>const std::vector&lt; Model &gt; &amp;</type>
          <declname>models</declname>
        </param>
        <param>
          <type>const std::deque&lt; individual * &gt; &amp;</type>
          <declname>pop</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>ref_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" line="61" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1acqui_1_1_ehvi_1a5d0876e753a2f1037bdf264501fdbd5d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t limbo::acqui::Ehvi&lt; Params, Model &gt;::dim</definition>
        <argsstring>() const </argsstring>
        <name>dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" line="68" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1acqui_1_1_ehvi_1a1e99fe83a965b5f706d057895598907d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AggregatorFunction</type>
            <defval><ref refid="structlimbo_1_1_first_elem" kindref="compound">FirstElem</ref></defval>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double limbo::acqui::Ehvi&lt; Params, Model &gt;::operator()</definition>
        <argsstring>(const Eigen::VectorXd &amp;v, const AggregatorFunction &amp;afun=AggregatorFunction()) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
          <defval>AggregatorFunction()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" line="71" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" bodystart="71" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" line="59" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/experimental/acqui/ehvi.hpp" bodystart="59" bodyend="85"/>
    <listofallmembers>
      <member refid="classlimbo_1_1acqui_1_1_ehvi_1add82bbffb6b0748f68e933540150560a" prot="private" virt="non-virtual"><scope>limbo::acqui::Ehvi</scope><name>_models</name></member>
      <member refid="classlimbo_1_1acqui_1_1_ehvi_1a895aa96e45bce61d05745d32cbec53b4" prot="private" virt="non-virtual"><scope>limbo::acqui::Ehvi</scope><name>_pop</name></member>
      <member refid="classlimbo_1_1acqui_1_1_ehvi_1aa12bf8d58185b0ec2d2bdd2cbdcfe1e1" prot="private" virt="non-virtual"><scope>limbo::acqui::Ehvi</scope><name>_ref_point</name></member>
      <member refid="classlimbo_1_1acqui_1_1_ehvi_1a5d0876e753a2f1037bdf264501fdbd5d" prot="public" virt="non-virtual"><scope>limbo::acqui::Ehvi</scope><name>dim</name></member>
      <member refid="classlimbo_1_1acqui_1_1_ehvi_1a9868f015ef640e9406022b027a0d7683" prot="public" virt="non-virtual"><scope>limbo::acqui::Ehvi</scope><name>Ehvi</name></member>
      <member refid="classlimbo_1_1acqui_1_1_ehvi_1a1e99fe83a965b5f706d057895598907d" prot="public" virt="non-virtual"><scope>limbo::acqui::Ehvi</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
