<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="structlimbo_1_1opt_1_1_parallel_repeater" kind="struct" language="C++" prot="public">
    <compoundname>limbo::opt::ParallelRepeater</compoundname>
    <includes refid="parallel__repeater_8hpp" local="no">limbo/opt/parallel_repeater.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Params</type>
      </param>
      <param>
        <type>typename Optimizer</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlimbo_1_1opt_1_1_parallel_repeater_1ac50bb2fc1525495c2025f0ff1c0cb021" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::opt::ParallelRepeater&lt; Params, Optimizer &gt;::operator()</definition>
        <argsstring>(const F &amp;f, const Eigen::VectorXd &amp;init, bool bounded) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>init</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bounded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/opt/parallel_repeater.hpp" line="31" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/opt/parallel_repeater.hpp" bodystart="31" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Meta-optimizer: run the same algorithm in parallel many times from different init points and return the maximum found among all the replicates (useful for local algorithms)</para><para>Parameters:<itemizedlist>
<listitem><para>int repeats </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <location file="/tmp/doc_limbo/limbo/src/limbo/opt/parallel_repeater.hpp" line="29" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/opt/parallel_repeater.hpp" bodystart="29" bodyend="55"/>
    <listofallmembers>
      <member refid="structlimbo_1_1opt_1_1_parallel_repeater_1ac50bb2fc1525495c2025f0ff1c0cb021" prot="public" virt="non-virtual"><scope>limbo::opt::ParallelRepeater</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
