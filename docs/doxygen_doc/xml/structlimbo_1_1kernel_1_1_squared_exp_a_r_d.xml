<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d" kind="struct" language="C++" prot="public">
    <compoundname>limbo::kernel::SquaredExpARD</compoundname>
    <includes refid="squared__exp__ard_8hpp" local="no">limbo/kernel/squared_exp_ard.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Params</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a5c3c458ea6c80a146a02145762f1211c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double limbo::kernel::SquaredExpARD&lt; Params &gt;::_sf2</definition>
        <argsstring></argsstring>
        <name>_sf2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="83" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a58ebedcc9d926593fedd851ba5ea2c10" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::kernel::SquaredExpARD&lt; Params &gt;::_ell</definition>
        <argsstring></argsstring>
        <name>_ell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="84" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a36aac45a14454b9a4c5b964124c59d9f" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd limbo::kernel::SquaredExpARD&lt; Params &gt;::_A</definition>
        <argsstring></argsstring>
        <name>_A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="85" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1ab0436ae8990145ea6796a315502bf746" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t limbo::kernel::SquaredExpARD&lt; Params &gt;::_input_dim</definition>
        <argsstring></argsstring>
        <name>_input_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="86" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1aa1c0262252f92bdc14d5857aabfff3e6" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::kernel::SquaredExpARD&lt; Params &gt;::_h_params</definition>
        <argsstring></argsstring>
        <name>_h_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="87" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a33d5c074a487792a305a0ae89e864f34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>limbo::kernel::SquaredExpARD&lt; Params &gt;::SquaredExpARD</definition>
        <argsstring>(int dim=1)</argsstring>
        <name>SquaredExpARD</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="31" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a42d0d653ef61abce8713acdec5c876a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t limbo::kernel::SquaredExpARD&lt; Params &gt;::h_params_size</definition>
        <argsstring>() const </argsstring>
        <name>h_params_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="39" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a528af96c67834d1ee6bfb8594fcc2956" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd&amp; limbo::kernel::SquaredExpARD&lt; Params &gt;::h_params</definition>
        <argsstring>() const </argsstring>
        <name>h_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="41" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a0275e61c4ce395b988c903302d8e088e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void limbo::kernel::SquaredExpARD&lt; Params &gt;::set_h_params</definition>
        <argsstring>(const Eigen::VectorXd &amp;p)</argsstring>
        <name>set_h_params</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="43" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1aa7dd2fbe6e8d5e84101eb3ccce15359e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::kernel::SquaredExpARD&lt; Params &gt;::grad</definition>
        <argsstring>(const Eigen::VectorXd &amp;x1, const Eigen::VectorXd &amp;x2) const </argsstring>
        <name>grad</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="54" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="54" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1ab3021822831528a6dbb4fcaf0d1c157e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double limbo::kernel::SquaredExpARD&lt; Params &gt;::operator()</definition>
        <argsstring>(const Eigen::VectorXd &amp;x1, const Eigen::VectorXd &amp;x2) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="71" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1aad6902b522c4fdd9b5c5799a0c440c40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd&amp; limbo::kernel::SquaredExpARD&lt; Params &gt;::ell</definition>
        <argsstring>() const </argsstring>
        <name>ell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="80" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst

   Squared exponential covariance function with automatic relevance detection (to be used with a likelihood optimizer)
   Computes the squared exponential covariance like this:

   .. math::
       k_{SE}(x, y) = \alpha^2 \exp \Big(-\frac{1}{2}(x-y)^TM(x-y)\Big),

with :math:`M = \Lambda\Lambda^T + diag(l_1^{-2}, \dots, l_n^{-2})` being the characteristic length scales and :math:`\alpha` describing the variability of the latent function. The parameters :math:`l_1^2, \dots, l_n^2, \alpha, \Lambda` are expected in this order in the parameter array.

   Reference: :cite:`Rasmussen2006`, p. 106 &amp; :cite:`brochu2010tutorial`, p. 10</verbatim> </para>    </detaileddescription>
    <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" line="30" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/squared_exp_ard.hpp" bodystart="30" bodyend="88"/>
    <listofallmembers>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a36aac45a14454b9a4c5b964124c59d9f" prot="private" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>_A</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a58ebedcc9d926593fedd851ba5ea2c10" prot="private" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>_ell</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1aa1c0262252f92bdc14d5857aabfff3e6" prot="private" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>_h_params</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1ab0436ae8990145ea6796a315502bf746" prot="private" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>_input_dim</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a5c3c458ea6c80a146a02145762f1211c" prot="private" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>_sf2</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1aad6902b522c4fdd9b5c5799a0c440c40" prot="public" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>ell</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1aa7dd2fbe6e8d5e84101eb3ccce15359e" prot="public" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>grad</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a528af96c67834d1ee6bfb8594fcc2956" prot="public" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>h_params</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a42d0d653ef61abce8713acdec5c876a5" prot="public" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>h_params_size</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1ab3021822831528a6dbb4fcaf0d1c157e" prot="public" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>operator()</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a0275e61c4ce395b988c903302d8e088e" prot="public" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>set_h_params</name></member>
      <member refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d_1a33d5c074a487792a305a0ae89e864f34" prot="public" virt="non-virtual"><scope>limbo::kernel::SquaredExpARD</scope><name>SquaredExpARD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
