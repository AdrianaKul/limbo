<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="bo__base_8hpp" kind="file" language="C++">
    <compoundname>bo_base.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">limits</includes>
    <includes local="no">exception</includes>
    <includes local="no">boost/parameter.hpp</includes>
    <includes local="no">boost/fusion/include/vector.hpp</includes>
    <includes local="no">boost/fusion/include/accumulate.hpp</includes>
    <includes local="no">boost/fusion/include/for_each.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">Eigen/Core</includes>
    <includes refid="macros_8hpp" local="no">limbo/tools/macros.hpp</includes>
    <includes refid="chain__criteria_8hpp" local="no">limbo/stop/chain_criteria.hpp</includes>
    <includes refid="max__iterations_8hpp" local="no">limbo/stop/max_iterations.hpp</includes>
    <includes refid="samples_8hpp" local="no">limbo/stat/samples.hpp</includes>
    <includes refid="aggregated__observations_8hpp" local="no">limbo/stat/aggregated_observations.hpp</includes>
    <includes refid="console__summary_8hpp" local="no">limbo/stat/console_summary.hpp</includes>
    <includes refid="sys_8hpp" local="no">limbo/tools/sys.hpp</includes>
    <includes refid="exp_8hpp" local="no">limbo/kernel/exp.hpp</includes>
    <includes refid="ucb_8hpp" local="no">limbo/acqui/ucb.hpp</includes>
    <includes refid="data_8hpp" local="no">limbo/mean/data.hpp</includes>
    <includes refid="model_2gp_8hpp" local="no">limbo/model/gp.hpp</includes>
    <includes refid="random__sampling_8hpp" local="no">limbo/init/random_sampling.hpp</includes>
    <includes refid="math_8hpp" local="no">limbo/tools/math.hpp</includes>
    <includedby refid="boptimizer_8hpp" local="no">/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp</includedby>
    <includedby refid="bo__multi_8hpp" local="no">/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/bo_multi.hpp</includedby>
    <includedby refid="cboptimizer_8hpp" local="no">/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/cboptimizer.hpp</includedby>
    <includedby refid="imgpo_8hpp" local="no">/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/imgpo.hpp</includedby>
    <includedby refid="parego_8hpp" local="no">/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/parego.hpp</includedby>
    <incdepgraph>
      <node id="174">
        <label>list</label>
      </node>
      <node id="143">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="184">
        <label>functional</label>
      </node>
      <node id="165">
        <label>Eigen/Cholesky</label>
      </node>
      <node id="134">
        <label>limits</label>
      </node>
      <node id="166">
        <label>Eigen/LU</label>
      </node>
      <node id="187">
        <label>iterator</label>
      </node>
      <node id="158">
        <label>limbo/acqui/ucb.hpp</label>
        <link refid="ucb_8hpp"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>cstdint</label>
      </node>
      <node id="175">
        <label>stdlib.h</label>
      </node>
      <node id="159">
        <label>limbo/opt/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>limbo/init/random_sampling.hpp</label>
        <link refid="random__sampling_8hpp"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>cmath</label>
      </node>
      <node id="164">
        <label>cassert</label>
      </node>
      <node id="141">
        <label>Eigen/Core</label>
      </node>
      <node id="149">
        <label>string</label>
      </node>
      <node id="169">
        <label>limbo/tools/parallel.hpp</label>
        <link refid="parallel_8hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>boost/parameter.hpp</label>
      </node>
      <node id="135">
        <label>exception</label>
      </node>
      <node id="148">
        <label>fstream</label>
      </node>
      <node id="156">
        <label>limbo/kernel/exp.hpp</label>
        <link refid="exp_8hpp"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>limbo/tools/sys.hpp</label>
        <link refid="sys_8hpp"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>limbo/tools/random_generator.hpp</label>
        <link refid="random__generator_8hpp"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>limbo/mean/data.hpp</label>
        <link refid="data_8hpp"/>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>limbo/tools.hpp</label>
        <link refid="tools_8hpp"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>boost/fusion/include/for_each.hpp</label>
      </node>
      <node id="176">
        <label>random</label>
      </node>
      <node id="160">
        <label>tuple</label>
      </node>
      <node id="154">
        <label>ctime</label>
      </node>
      <node id="155">
        <label>unistd.h</label>
      </node>
      <node id="132">
        <label>vector</label>
      </node>
      <node id="140">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="177">
        <label>utility</label>
      </node>
      <node id="183">
        <label>array</label>
      </node>
      <node id="151">
        <label>limbo/stat/aggregated_observations.hpp</label>
        <link refid="aggregated__observations_8hpp"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>limbo/kernel/kernel.hpp</label>
        <link refid="kernel_2kernel_8hpp"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>limbo/stop/max_iterations.hpp</label>
        <link refid="max__iterations_8hpp"/>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>limbo/stat/samples.hpp</label>
        <link refid="samples_8hpp"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>limbo/tools/rand_utils.hpp</label>
        <link refid="rand__utils_8hpp"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>cstdlib</label>
      </node>
      <node id="133">
        <label>iostream</label>
      </node>
      <node id="163">
        <label>limbo/model/gp.hpp</label>
        <link refid="model_2gp_8hpp"/>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>cstddef</label>
      </node>
      <node id="138">
        <label>boost/fusion/include/accumulate.hpp</label>
      </node>
      <node id="167">
        <label>limbo/model/gp/no_lf_opt.hpp</label>
        <link refid="no__lf__opt_8hpp"/>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>limbo/stat/stat_base.hpp</label>
        <link refid="stat__base_8hpp"/>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>mutex</label>
      </node>
      <node id="152">
        <label>limbo/stat/console_summary.hpp</label>
        <link refid="console__summary_8hpp"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>chrono</label>
      </node>
      <node id="137">
        <label>boost/fusion/include/vector.hpp</label>
      </node>
      <node id="161">
        <label>boost/optional.hpp</label>
      </node>
      <node id="189">
        <label>thread</label>
      </node>
      <node id="186">
        <label>type_traits</label>
      </node>
      <node id="171">
        <label>limbo/tools/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>algorithm</label>
      </node>
      <node id="144">
        <label>limbo/stop/chain_criteria.hpp</label>
        <link refid="chain__criteria_8hpp"/>
      </node>
      <node id="131">
        <label>/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp</label>
        <link refid="bo_base.hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>memory</label>
      </node>
      <node id="185">
        <label>initializer_list</label>
      </node>
      <node id="142">
        <label>limbo/tools/macros.hpp</label>
        <link refid="macros_8hpp"/>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="199">
        <label>/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/nsbo.hpp</label>
        <link refid="nsbo_8hpp"/>
      </node>
      <node id="198">
        <label>/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/ehvi.hpp</label>
        <link refid="bayes__opt_2ehvi_8hpp"/>
      </node>
      <node id="192">
        <label>/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp</label>
        <link refid="boptimizer_8hpp"/>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/parego.hpp</label>
        <link refid="parego_8hpp"/>
      </node>
      <node id="195">
        <label>/tmp/doc_limbo/limbo/src/limbo/experimental/stat/pareto_benchmark.hpp</label>
        <link refid="pareto__benchmark_8hpp"/>
      </node>
      <node id="200">
        <label>/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/cboptimizer.hpp</label>
        <link refid="cboptimizer_8hpp"/>
      </node>
      <node id="194">
        <label>/tmp/doc_limbo/limbo/src/limbo/limbo.hpp</label>
        <link refid="limbo_8hpp"/>
        <childnode refid="195" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/imgpo.hpp</label>
        <link refid="imgpo_8hpp"/>
      </node>
      <node id="197">
        <label>/tmp/doc_limbo/limbo/src/limbo/experimental/bayes_opt/bo_multi.hpp</label>
        <link refid="bo__multi_8hpp"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp</label>
        <link refid="bo_base.hpp"/>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>/tmp/doc_limbo/limbo/src/limbo/bayes_opt.hpp</label>
        <link refid="bayes__opt_8hpp"/>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlimbo_1_1defaults_1_1bayes__opt__bobase" prot="public">limbo::defaults::bayes_opt_bobase</innerclass>
    <innerclass refid="structlimbo_1_1_refresh_stat__f" prot="public">limbo::RefreshStat_f</innerclass>
    <innerclass refid="structlimbo_1_1_first_elem" prot="public">limbo::FirstElem</innerclass>
    <innerclass refid="classlimbo_1_1_evaluation_error" prot="public">limbo::EvaluationError</innerclass>
    <innerclass refid="classlimbo_1_1bayes__opt_1_1_bo_base" prot="public">limbo::bayes_opt::BoBase</innerclass>
    <innerclass refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults" prot="public">limbo::bayes_opt::BoBase::defaults</innerclass>
    <innernamespace refid="namespacelimbo">limbo</innernamespace>
    <innernamespace refid="namespacelimbo_1_1defaults">limbo::defaults</innernamespace>
    <innernamespace refid="namespacelimbo_1_1bayes__opt">limbo::bayes_opt</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="bo__base_8hpp_1a673f164000ed2c207f200528add4f736" prot="public" static="no">
        <name>BOOST_NO_SCOPED_ENUMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="58" column="13" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//|<sp/>Copyright<sp/>Inria<sp/>May<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>This<sp/>project<sp/>has<sp/>received<sp/>funding<sp/>from<sp/>the<sp/>European<sp/>Research<sp/>Council<sp/>(ERC)<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>the<sp/>European<sp/>Union&apos;s<sp/>Horizon<sp/>2020<sp/>research<sp/>and<sp/>innovation<sp/>programme<sp/>(grant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>agreement<sp/>No<sp/>637972)<sp/>-<sp/>see<sp/>http://www.resibots.eu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>Contributor(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/>-<sp/>Jean-Baptiste<sp/>Mouret<sp/>(jean-baptiste.mouret@inria.fr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/>-<sp/>Antoine<sp/>Cully<sp/>(antoinecully@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/>-<sp/>Kontantinos<sp/>Chatzilygeroudis<sp/>(konstantinos.chatzilygeroudis@inria.fr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/>-<sp/>Federico<sp/>Allocati<sp/>(fede.allocati@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/>-<sp/>Vaios<sp/>Papaspyros<sp/>(b.papaspyros@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/>-<sp/>Roberto<sp/>Rama<sp/>(bertoski@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>This<sp/>software<sp/>is<sp/>a<sp/>computer<sp/>library<sp/>whose<sp/>purpose<sp/>is<sp/>to<sp/>optimize<sp/>continuous,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>black-box<sp/>functions.<sp/>It<sp/>mainly<sp/>implements<sp/>Gaussian<sp/>processes<sp/>and<sp/>Bayesian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>optimization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>Main<sp/>repository:<sp/>http://github.com/resibots/limbo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>Documentation:<sp/>http://www.resibots.eu/limbo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL-C<sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL-C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>&quot;http://www.cecill.info&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>liability.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//|<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL-C<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIMBO_BAYES_OPT_BO_BASE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIMBO_BAYES_OPT_BO_BASE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/parameter.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/fusion/include/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/fusion/include/accumulate.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/fusion/include/for_each.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="bo__base_8hpp_1a673f164000ed2c207f200528add4f736" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_SCOPED_ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>everything<sp/>to<sp/>have<sp/>the<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="macros_8hpp" kindref="compound">limbo/tools/macros.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="chain__criteria_8hpp" kindref="compound">limbo/stop/chain_criteria.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="max__iterations_8hpp" kindref="compound">limbo/stop/max_iterations.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="samples_8hpp" kindref="compound">limbo/stat/samples.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aggregated__observations_8hpp" kindref="compound">limbo/stat/aggregated_observations.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="console__summary_8hpp" kindref="compound">limbo/stat/console_summary.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sys_8hpp" kindref="compound">limbo/tools/sys.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="exp_8hpp" kindref="compound">limbo/kernel/exp.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ucb_8hpp" kindref="compound">limbo/acqui/ucb.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="data_8hpp" kindref="compound">limbo/mean/data.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="model_2gp_8hpp" kindref="compound">limbo/model/gp.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random__sampling_8hpp" kindref="compound">limbo/init/random_sampling.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="math_8hpp" kindref="compound">limbo/tools/math.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelimbo" kindref="compound">limbo</ref><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">defaults<sp/>{</highlight></codeline>
<codeline lineno="80" refid="structlimbo_1_1defaults_1_1bayes__opt__bobase" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlimbo_1_1defaults_1_1bayes__opt__bobase" kindref="compound">bayes_opt_bobase</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlimbo_1_1defaults_1_1bayes__opt__bobase_1ae45d5d0172acb6ca307cb62e3fa35365" kindref="member">BO_PARAM</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>stats_enabled,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlimbo_1_1defaults_1_1bayes__opt__bobase_1ae45d5d0172acb6ca307cb62e3fa35365" kindref="member">BO_PARAM</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>bounded,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AggregatorFunction&gt;</highlight></codeline>
<codeline lineno="86" refid="structlimbo_1_1_refresh_stat__f" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlimbo_1_1_refresh_stat__f" kindref="compound">RefreshStat_f</ref><sp/>{</highlight></codeline>
<codeline lineno="87" refid="structlimbo_1_1_refresh_stat__f_1aa457d1c9101974999487052fddec098c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlimbo_1_1_refresh_stat__f_1aa457d1c9101974999487052fddec098c" kindref="member">RefreshStat_f</ref>(BO&amp;<sp/>bo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AggregatorFunction&amp;<sp/>afun)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_bo(bo),<sp/>_afun(afun)<sp/>{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structlimbo_1_1_refresh_stat__f_1ad94ccf3c46dbed8e9f8ab573af8fb258" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BO&amp;<sp/><ref refid="structlimbo_1_1_refresh_stat__f_1ad94ccf3c46dbed8e9f8ab573af8fb258" kindref="member">_bo</ref>;</highlight></codeline>
<codeline lineno="91" refid="structlimbo_1_1_refresh_stat__f_1af02fdc84a4066c199d26e823b9887531" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AggregatorFunction&amp;<sp/><ref refid="structlimbo_1_1_refresh_stat__f_1af02fdc84a4066c199d26e823b9887531" kindref="member">_afun</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="94" refid="structlimbo_1_1_refresh_stat__f_1a24498c1e97e8aa89a8180422a3ad9109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1_refresh_stat__f_1a24498c1e97e8aa89a8180422a3ad9109" kindref="member">operator()</ref>(T&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>x(_bo,<sp/>_afun);<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structlimbo_1_1_first_elem" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlimbo_1_1_first_elem" kindref="compound">FirstElem</ref><sp/>{</highlight></codeline>
<codeline lineno="98" refid="structlimbo_1_1_first_elem_1a615df66bdce08d6cb405fbe4710e3953" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1_first_elem_1a615df66bdce08d6cb405fbe4710e3953" kindref="member">result_type</ref><sp/>=<sp/>double;</highlight></codeline>
<codeline lineno="99" refid="structlimbo_1_1_first_elem_1a6816ea8e21acec76f91542776ab02422" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1_first_elem_1a6816ea8e21acec76f91542776ab02422" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="100"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x(0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="104" refid="classlimbo_1_1_evaluation_error" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlimbo_1_1_evaluation_error" kindref="compound">EvaluationError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>optimal<sp/>named<sp/>template<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>http://www.boost.org/doc/libs/1_55_0/libs/parameter/doc/html/index.html#parameter-enabled-class-templates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_PARAMETER_TEMPLATE_KEYWORD(initfun)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_PARAMETER_TEMPLATE_KEYWORD(acquifun)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_PARAMETER_TEMPLATE_KEYWORD(modelfun)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_PARAMETER_TEMPLATE_KEYWORD(statsfun)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_PARAMETER_TEMPLATE_KEYWORD(stopcrit)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="namespacelimbo_1_1bayes__opt" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/>namespace<sp/>bayes_opt<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacelimbo_1_1bayes__opt_1a824303857a6912240f23e422927773f7" kindref="member">bobase_signature</ref><sp/>=<sp/>boost::parameter::parameters&lt;boost::parameter::optional&lt;tag::statsfun&gt;,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::parameter::optional&lt;tag::initfun&gt;,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::parameter::optional&lt;tag::acquifun&gt;,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::parameter::optional&lt;tag::stopcrit&gt;,</highlight></codeline>
<codeline lineno="123" refid="namespacelimbo_1_1bayes__opt_1a824303857a6912240f23e422927773f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::parameter::optional&lt;tag::modelfun&gt;&gt;;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Params,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A1<sp/>=<sp/>boost::parameter::void_,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A2<sp/>=<sp/>boost::parameter::void_,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A3<sp/>=<sp/>boost::parameter::void_,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A4<sp/>=<sp/>boost::parameter::void_,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A5<sp/>=<sp/>boost::parameter::void_,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A6<sp/>=<sp/>boost::parameter::void_&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight></codeline>
<codeline lineno="177" refid="classlimbo_1_1bayes__opt_1_1_bo_base" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad64c1fe61c97f4540914018439f96a0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad64c1fe61c97f4540914018439f96a0a" kindref="member">params_t</ref><sp/>=<sp/>Params;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults" kindref="compound">defaults</ref><sp/>{</highlight></codeline>
<codeline lineno="182" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1afab889d523b8c28d1161079a5a453f79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1init_1_1_random_sampling" kindref="compound">init_t</ref><sp/>=<sp/><ref refid="structlimbo_1_1init_1_1_random_sampling" kindref="compound">init::RandomSampling&lt;Params&gt;</ref>;<sp/></highlight><highlight class="comment">//<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a74f559358b99209461a1aac1e0dacb1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1kernel_1_1_exp" kindref="compound">kf_t</ref><sp/>=<sp/><ref refid="structlimbo_1_1kernel_1_1_exp" kindref="compound">kernel::Exp&lt;Params&gt;</ref>;</highlight></codeline>
<codeline lineno="185" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1ae8b922abc8e126f785e1001342cf47ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1mean_1_1_data" kindref="compound">mean_t</ref><sp/>=<sp/><ref refid="structlimbo_1_1mean_1_1_data" kindref="compound">mean::Data&lt;Params&gt;</ref>;</highlight></codeline>
<codeline lineno="186" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1aa9a30c408b869fd46861b028b6325b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1model_1_1_g_p" kindref="compound">model_t</ref><sp/>=<sp/><ref refid="classlimbo_1_1model_1_1_g_p" kindref="compound">model::GP&lt;Params, kf_t, mean_t&gt;</ref>;<sp/></highlight><highlight class="comment">//<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>you<sp/>have<sp/>to<sp/>specify<sp/>the<sp/>acquisition<sp/><sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>use<sp/>a<sp/>custom<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a7728ece1763ffbcac4e37f219047dcb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1acqui_1_1_u_c_b" kindref="compound">acqui_t</ref><sp/>=<sp/><ref refid="classlimbo_1_1acqui_1_1_u_c_b" kindref="compound">acqui::UCB&lt;Params, model_t&gt;</ref>;<sp/></highlight><highlight class="comment">//<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a3c475362a937e011e02c715e8edbf2d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a3c475362a937e011e02c715e8edbf2d1" kindref="member">stat_t</ref><sp/>=<sp/>boost::fusion::vector&lt;stat::Samples&lt;Params&gt;,<sp/><ref refid="structlimbo_1_1stat_1_1_aggregated_observations" kindref="compound">stat::AggregatedObservations&lt;Params&gt;</ref>,<sp/><ref refid="structlimbo_1_1stat_1_1_console_summary" kindref="compound">stat::ConsoleSummary&lt;Params&gt;</ref>&gt;;<sp/></highlight><highlight class="comment">//<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1aabb9a88029b7b3cba6d1bafe3dfadaf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1aabb9a88029b7b3cba6d1bafe3dfadaf5" kindref="member">stop_t</ref><sp/>=<sp/>boost::fusion::vector&lt;stop::MaxIterations&lt;Params&gt;&gt;;<sp/></highlight><highlight class="comment">//<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>the<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" kindref="member">args</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bobase_signature::bind&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6&gt;::type;</highlight></codeline>
<codeline lineno="196" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0cd0e388e42c62bc38e02c096d8ae245" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0cd0e388e42c62bc38e02c096d8ae245" kindref="member">init_function_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::parameter::binding&lt;args,<sp/>tag::initfun,<sp/>typename<sp/>defaults::init_t&gt;::type;</highlight></codeline>
<codeline lineno="197" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5abe502b49e1ee70d5e00f27f95f5dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5abe502b49e1ee70d5e00f27f95f5dff" kindref="member">acquisition_function_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::parameter::binding&lt;args,<sp/>tag::acquifun,<sp/>typename<sp/>defaults::acqui_t&gt;::type;</highlight></codeline>
<codeline lineno="198" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5e23d523dd2a16b866a2660721b937bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5e23d523dd2a16b866a2660721b937bb" kindref="member">model_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::parameter::binding&lt;args,<sp/>tag::modelfun,<sp/>typename<sp/>defaults::model_t&gt;::type;</highlight></codeline>
<codeline lineno="199" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" kindref="member">Stat</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::parameter::binding&lt;args,<sp/>tag::statsfun,<sp/>typename<sp/>defaults::stat_t&gt;::type;</highlight></codeline>
<codeline lineno="200" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" kindref="member">StoppingCriteria</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::parameter::binding&lt;args,<sp/>tag::stopcrit,<sp/>typename<sp/>defaults::stop_t&gt;::type;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1af3ce6ecc075e643cb1bdde0fb139ce21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1af3ce6ecc075e643cb1bdde0fb139ce21" kindref="member">stopping_criteria_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::if_&lt;boost::fusion::traits::is_sequence&lt;StoppingCriteria&gt;,<sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" kindref="member">StoppingCriteria</ref>,<sp/>boost::fusion::vector&lt;StoppingCriteria&gt;&gt;::type;</highlight></codeline>
<codeline lineno="203" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a407dede091900c86f4bf8001273c26e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a407dede091900c86f4bf8001273c26e2" kindref="member">stat_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::if_&lt;boost::fusion::traits::is_sequence&lt;Stat&gt;,<sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" kindref="member">Stat</ref>,<sp/>boost::fusion::vector&lt;Stat&gt;&gt;::type;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad361278c23693c4220eaa9a9de5d3333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad361278c23693c4220eaa9a9de5d3333" kindref="member">BoBase</ref>()<sp/>:<sp/>_total_iterations(0)<sp/>{<sp/>_make_res_dir();<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4d94db5c40b35bec292aebfd19b8fb3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4d94db5c40b35bec292aebfd19b8fb3d" kindref="member">stats_enabled</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Params::bayes_opt_bobase::stats_enabled();<sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4c87b7618144f99027c294db3eb803f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4c87b7618144f99027c294db3eb803f6" kindref="member">res_dir</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_res_dir;<sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a855dc5de1d0732a25f4c9730ac50d0bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Eigen::VectorXd&gt;&amp;<sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a855dc5de1d0732a25f4c9730ac50d0bd" kindref="member">observations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_observations;<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad3ba0dba1418df0ed8e79d4dd3cc907a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Eigen::VectorXd&gt;&amp;<sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad3ba0dba1418df0ed8e79d4dd3cc907a" kindref="member">samples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_samples;<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac3d643d5a668edf22ad053bfc54ea090" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac3d643d5a668edf22ad053bfc54ea090" kindref="member">current_iteration</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_current_iteration;<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5470e106c4584a30636cafb6fbad6d73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5470e106c4584a30636cafb6fbad6d73" kindref="member">total_iterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_total_iterations;<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac533d6397b0c0fa5ba0a4d03e0545fa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac533d6397b0c0fa5ba0a4d03e0545fa2" kindref="member">add_new_sample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>v)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__tools_1gabcb0caa2ffabd42fa865c9ab0b624681" kindref="member">tools::is_nan_or_inf</ref>(v))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1_evaluation_error" kindref="compound">EvaluationError</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_samples.push_back(s);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_observations.push_back(v);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StateFunction&gt;</highlight></codeline>
<codeline lineno="243" refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a70e8e4fea1b56aedc943fe62170659e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a70e8e4fea1b56aedc943fe62170659e4" kindref="member">eval_and_add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateFunction&amp;<sp/>seval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>sample)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;add_new_sample(sample,<sp/>seval(sample));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StateFunction,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AggregatorFunction&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateFunction&amp;<sp/>seval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AggregatorFunction&amp;<sp/>afun,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_current_iteration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_total_iterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_samples.clear();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_observations.clear();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_total_iterations<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0cd0e388e42c62bc38e02c096d8ae245" kindref="member">init_function_t</ref>()(seval,<sp/>afun,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AggregatorFunction&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_stop(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BO&amp;<sp/>bo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AggregatorFunction&amp;<sp/>afun)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="265"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlimbo_1_1stop_1_1_chain_criteria" kindref="compound">stop::ChainCriteria&lt;BO, AggregatorFunction&gt;</ref><sp/>chain(bo,<sp/>afun);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::fusion::accumulate(_stopping_criteria,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>chain);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AggregatorFunction&gt;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_update_stats(BO&amp;<sp/>bo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AggregatorFunction&amp;<sp/>afun)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>not<sp/>const,<sp/>because<sp/>some<sp/>stat<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>the<sp/>optimizer....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__par__tools_1gaa7bbb8a640ed2b66101d57b5b565457f" kindref="member">boost::fusion::for_each</ref>(_stat,<sp/><ref refid="structlimbo_1_1_refresh_stat__f" kindref="compound">RefreshStat_f&lt;BO, AggregatorFunction&gt;</ref>(bo,<sp/>afun));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_make_res_dir()</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Params::bayes_opt_bobase::stats_enabled())</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_res_dir<sp/>=<sp/><ref refid="group__tools_1ga4810ffa502d791d6ad750739a953f56f" kindref="member">tools::hostname</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="group__tools_1gafb48d3271e7423f8b8d94599869bd9cb" kindref="member">tools::date</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="group__tools_1ga4ee13d198367d07cabd37316e671db09" kindref="member">tools::getpid</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::path<sp/>my_path(_res_dir);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::create_directory(my_path);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>_res_dir;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_current_iteration;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_total_iterations;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1af3ce6ecc075e643cb1bdde0fb139ce21" kindref="member">stopping_criteria_t</ref><sp/>_stopping_criteria;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a407dede091900c86f4bf8001273c26e2" kindref="member">stat_t</ref><sp/>_stat;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Eigen::VectorXd&gt;<sp/>_observations;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Eigen::VectorXd&gt;<sp/>_samples;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp"/>
  </compounddef>
</doxygen>
