<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structlimbo_1_1kernel_1_1_exp" kind="struct" language="C++" prot="public">
    <compoundname>limbo::kernel::Exp</compoundname>
    <basecompoundref refid="structlimbo_1_1kernel_1_1_base_kernel" prot="public" virt="non-virtual">limbo::kernel::BaseKernel&lt; Params, Exp&lt; Params &gt; &gt;</basecompoundref>
    <includes refid="exp_8hpp" local="no">limbo/kernel/exp.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Params</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_exp_1abec48720f518fa51be7f74bf102add09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>limbo::kernel::Exp&lt; Params &gt;::Exp</definition>
        <argsstring>(size_t dim=1)</argsstring>
        <name>Exp</name>
        <param>
          <type>size_t</type>
          <declname>dim</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/exp.hpp" line="75" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/exp.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1kernel_1_1_exp_1abb1accd4f07243ef60fbd9441ebeb323" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double limbo::kernel::Exp&lt; Params &gt;::kernel</definition>
        <argsstring>(const Eigen::VectorXd &amp;v1, const Eigen::VectorXd &amp;v2) const </argsstring>
        <name>kernel</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/exp.hpp" line="77" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/exp.hpp" bodystart="77" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst
Exponential kernel (see :cite:`brochu2010tutorial` p. 9).

.. math::
    k(v_1, v_2)  = \sigma^2\exp \Big(-\frac{1}{l^2} ||v_1 - v_2||^2\Big)

Parameters:
  - ``double sigma_sq`` (signal variance)
  - ``double l`` (characteristic length scale)
</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="110">
        <label>limbo::kernel::BaseKernel&lt; Params, Exp&lt; Params &gt; &gt;</label>
        <link refid="structlimbo_1_1kernel_1_1_base_kernel"/>
      </node>
      <node id="109">
        <label>limbo::kernel::Exp&lt; Params &gt;</label>
        <link refid="structlimbo_1_1kernel_1_1_exp"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="112">
        <label>limbo::kernel::BaseKernel&lt; Params, Exp&lt; Params &gt; &gt;</label>
        <link refid="structlimbo_1_1kernel_1_1_base_kernel"/>
      </node>
      <node id="111">
        <label>limbo::kernel::Exp&lt; Params &gt;</label>
        <link refid="structlimbo_1_1kernel_1_1_exp"/>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/tmp/doc_limbo/limbo/src/limbo/kernel/exp.hpp" line="74" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/kernel/exp.hpp" bodystart="74" bodyend="82"/>
    <listofallmembers>
      <member refid="structlimbo_1_1kernel_1_1_base_kernel_1aa147d007671f11249dd2126325107fb3" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>BaseKernel</name></member>
      <member refid="structlimbo_1_1kernel_1_1_exp_1abec48720f518fa51be7f74bf102add09" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>Exp</name></member>
      <member refid="structlimbo_1_1kernel_1_1_base_kernel_1a99e4fde45a031017e9916bdd8d662b8c" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>grad</name></member>
      <member refid="structlimbo_1_1kernel_1_1_base_kernel_1a5547c4409191381d10dc034f26d5d2ba" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>h_params</name></member>
      <member refid="structlimbo_1_1kernel_1_1_base_kernel_1a1ffc58d9493a13ec3685c2bb4f8d997e" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>h_params_size</name></member>
      <member refid="structlimbo_1_1kernel_1_1_exp_1abb1accd4f07243ef60fbd9441ebeb323" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>kernel</name></member>
      <member refid="structlimbo_1_1kernel_1_1_base_kernel_1ad75f586e3a358b6b09dbd054bb4e3c9c" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>noise</name></member>
      <member refid="structlimbo_1_1kernel_1_1_base_kernel_1ab9a0aba134c22cb8c6b25571e648b9bf" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>operator()</name></member>
      <member refid="structlimbo_1_1kernel_1_1_base_kernel_1a520f7aaa4d1de0391f85fd3fb36291e6" prot="public" virt="non-virtual"><scope>limbo::kernel::Exp</scope><name>set_h_params</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
