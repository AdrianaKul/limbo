<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="structlimbo_1_1opt_1_1_cmaes" kind="struct" language="C++" prot="public">
    <compoundname>limbo::opt::Cmaes</compoundname>
    <includes refid="cmaes_8hpp" local="no">limbo/opt/cmaes.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Params</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlimbo_1_1opt_1_1_cmaes_1a47ee6970bd2300108c83281ea6fced17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::opt::Cmaes&lt; Params &gt;::operator()</definition>
        <argsstring>(const F &amp;f, const Eigen::VectorXd &amp;init, double bounded) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>init</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bounded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" line="88" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" bodystart="88" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structlimbo_1_1opt_1_1_cmaes_1a8437014f4bad1fddbd701b084d3613c9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::opt::Cmaes&lt; Params &gt;::_opt_unbounded</definition>
        <argsstring>(F &amp;f_cmaes, int dim, const Eigen::VectorXd &amp;init) const </argsstring>
        <name>_opt_unbounded</name>
        <param>
          <type>F &amp;</type>
          <declname>f_cmaes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" line="108" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" bodystart="108" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1opt_1_1_cmaes_1a697b08f2fdc3f2bffb0d9cb4b720f16c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd limbo::opt::Cmaes&lt; Params &gt;::_opt_bounded</definition>
        <argsstring>(F &amp;f_cmaes, int dim, const Eigen::VectorXd &amp;init) const </argsstring>
        <name>_opt_bounded</name>
        <param>
          <type>F &amp;</type>
          <declname>f_cmaes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" line="127" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" bodystart="127" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structlimbo_1_1opt_1_1_cmaes_1a545a819461daf8f39b9f29e0e749ce83" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void limbo::opt::Cmaes&lt; Params &gt;::_set_common_params</definition>
        <argsstring>(P &amp;cmaparams, int dim) const </argsstring>
        <name>_set_common_params</name>
        <param>
          <type>P &amp;</type>
          <declname>cmaparams</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" line="156" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" bodystart="156" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Covariance Matrix Adaptation Evolution Strategy by Hansen et al. (See: <ulink url="https://www.lri.fr/~hansen/cmaesintro.html">https://www.lri.fr/~hansen/cmaesintro.html</ulink>)<itemizedlist>
<listitem><para>our implementation is based on libcmaes (<ulink url="https://github.com/beniz/libcmaes">https://github.com/beniz/libcmaes</ulink>)</para></listitem><listitem><para>Support bounded and unbounded optimization</para></listitem><listitem><para>Only available if libcmaes is installed (see the compilation instructions)</para></listitem><listitem><para>Parameters :<itemizedlist>
<listitem><para>double max_fun_evals</para></listitem><listitem><para>int restarts </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>    </detaileddescription>
    <location file="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" line="85" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/opt/cmaes.hpp" bodystart="85" bodyend="178"/>
    <listofallmembers>
      <member refid="structlimbo_1_1opt_1_1_cmaes_1a697b08f2fdc3f2bffb0d9cb4b720f16c" prot="private" virt="non-virtual"><scope>limbo::opt::Cmaes</scope><name>_opt_bounded</name></member>
      <member refid="structlimbo_1_1opt_1_1_cmaes_1a8437014f4bad1fddbd701b084d3613c9" prot="private" virt="non-virtual"><scope>limbo::opt::Cmaes</scope><name>_opt_unbounded</name></member>
      <member refid="structlimbo_1_1opt_1_1_cmaes_1a545a819461daf8f39b9f29e0e749ce83" prot="private" virt="non-virtual"><scope>limbo::opt::Cmaes</scope><name>_set_common_params</name></member>
      <member refid="structlimbo_1_1opt_1_1_cmaes_1a47ee6970bd2300108c83281ea6fced17" prot="public" virt="non-virtual"><scope>limbo::opt::Cmaes</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
