<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classlimbo_1_1bayes__opt_1_1_bo_base" kind="class" language="C++" prot="public">
    <compoundname>limbo::bayes_opt::BoBase</compoundname>
    <derivedcompoundref refid="classlimbo_1_1bayes__opt_1_1_b_optimizer" prot="public" virt="non-virtual">limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classlimbo_1_1experimental_1_1bayes__opt_1_1_bo_multi" prot="public" virt="non-virtual">limbo::experimental::bayes_opt::BoMulti&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classlimbo_1_1experimental_1_1bayes__opt_1_1_c_b_optimizer" prot="public" virt="non-virtual">limbo::experimental::bayes_opt::CBOptimizer&lt; Params, A1, A2, A3, A4, A5, A6, A7 &gt;</derivedcompoundref>
    <includes refid="bo__base_8hpp" local="no">limbo/bayes_opt/bo_base.hpp</includes>
    <innerclass refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults" prot="public">limbo::bayes_opt::BoBase::defaults</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Params</declname>
        <defname>Params</defname>
      </param>
      <param>
        <type>class</type>
        <declname>A1</declname>
        <defname>A1</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A2</declname>
        <defname>A2</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A3</declname>
        <defname>A3</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A4</declname>
        <defname>A4</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A5</declname>
        <defname>A5</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A6</declname>
        <defname>A6</defname>
        <defval>boost::parameter::void_</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ad64c1fe61c97f4540914018439f96a0a" prot="public" static="no">
        <type>Params</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::params_t =  Params</definition>
        <argsstring></argsstring>
        <name>params_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="179" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" prot="public" static="no">
        <type>typename bobase_signature::bind&lt; A1, A2, A3, A4, A5, A6 &gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::args =  typename bobase_signature::bind&lt;A1, A2, A3, A4, A5, A6&gt;::type</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="195" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a0cd0e388e42c62bc38e02c096d8ae245" prot="public" static="no">
        <type>typename boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" kindref="member">args</ref>, tag::initfun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1afab889d523b8c28d1161079a5a453f79" kindref="member">defaults::init_t</ref> &gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::init_function_t =  typename boost::parameter::binding&lt;args, tag::initfun, typename defaults::init_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>init_function_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="196" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a5abe502b49e1ee70d5e00f27f95f5dff" prot="public" static="no">
        <type>typename boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" kindref="member">args</ref>, tag::acquifun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a7728ece1763ffbcac4e37f219047dcb1" kindref="member">defaults::acqui_t</ref> &gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::acquisition_function_t =  typename boost::parameter::binding&lt;args, tag::acquifun, typename defaults::acqui_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>acquisition_function_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="197" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a5e23d523dd2a16b866a2660721b937bb" prot="public" static="no">
        <type>typename boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" kindref="member">args</ref>, tag::modelfun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1aa9a30c408b869fd46861b028b6325b4a" kindref="member">defaults::model_t</ref> &gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::model_t =  typename boost::parameter::binding&lt;args, tag::modelfun, typename defaults::model_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>model_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="198" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" prot="public" static="no">
        <type>typename boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" kindref="member">args</ref>, tag::statsfun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a3c475362a937e011e02c715e8edbf2d1" kindref="member">defaults::stat_t</ref> &gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::Stat =  typename boost::parameter::binding&lt;args, tag::statsfun, typename defaults::stat_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>Stat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="199" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" prot="public" static="no">
        <type>typename boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" kindref="member">args</ref>, tag::stopcrit, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1aabb9a88029b7b3cba6d1bafe3dfadaf5" kindref="member">defaults::stop_t</ref> &gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::StoppingCriteria =  typename boost::parameter::binding&lt;args, tag::stopcrit, typename defaults::stop_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>StoppingCriteria</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="200" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1af3ce6ecc075e643cb1bdde0fb139ce21" prot="public" static="no">
        <type>typename boost::mpl::if_&lt; boost::fusion::traits::is_sequence&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" kindref="member">StoppingCriteria</ref> &gt;, <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" kindref="member">StoppingCriteria</ref>, boost::fusion::vector&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" kindref="member">StoppingCriteria</ref> &gt;&gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::stopping_criteria_t =  typename boost::mpl::if_&lt;boost::fusion::traits::is_sequence&lt;StoppingCriteria&gt;, StoppingCriteria, boost::fusion::vector&lt;StoppingCriteria&gt;&gt;::type</definition>
        <argsstring></argsstring>
        <name>stopping_criteria_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="202" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a407dede091900c86f4bf8001273c26e2" prot="public" static="no">
        <type>typename boost::mpl::if_&lt; boost::fusion::traits::is_sequence&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" kindref="member">Stat</ref> &gt;, <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" kindref="member">Stat</ref>, boost::fusion::vector&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" kindref="member">Stat</ref> &gt;&gt;::type</type>
        <definition>using limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::stat_t =  typename boost::mpl::if_&lt;boost::fusion::traits::is_sequence&lt;Stat&gt;, Stat, boost::fusion::vector&lt;Stat&gt;&gt;::type</definition>
        <argsstring></argsstring>
        <name>stat_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="203" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a91d255800e3146a76359c2ce5bcb0376" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_res_dir</definition>
        <argsstring></argsstring>
        <name>_res_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="286" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a7a8d0ecbcff360edb4c83c6a545bea09" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_current_iteration</definition>
        <argsstring></argsstring>
        <name>_current_iteration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="287" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1af5e472562bba7135a3d89eebb9c33dde" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_total_iterations</definition>
        <argsstring></argsstring>
        <name>_total_iterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="288" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a58888768b28ed0fcbcd8d34e862388eb" prot="private" static="no" mutable="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1af3ce6ecc075e643cb1bdde0fb139ce21" kindref="member">stopping_criteria_t</ref></type>
        <definition>stopping_criteria_t limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_stopping_criteria</definition>
        <argsstring></argsstring>
        <name>_stopping_criteria</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="289" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a09b5fbcfc790cc627b55f63a938435cd" prot="private" static="no" mutable="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a407dede091900c86f4bf8001273c26e2" kindref="member">stat_t</ref></type>
        <definition>stat_t limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_stat</definition>
        <argsstring></argsstring>
        <name>_stat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="290" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a3676c6bc6f38819c99486974bccf05fe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_observations</definition>
        <argsstring></argsstring>
        <name>_observations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="292" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a778d3eaf7d64e2217f1fe37d0881fa34" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_samples</definition>
        <argsstring></argsstring>
        <name>_samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="293" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ad361278c23693c4220eaa9a9de5d3333" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::BoBase</definition>
        <argsstring>()</argsstring>
        <name>BoBase</name>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="206" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a1a50eebb8a6efd528582ea871a0879a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::BoBase</definition>
        <argsstring>(const BoBase &amp;other)=delete</argsstring>
        <name>BoBase</name>
        <param>
          <type>const <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy is disabled (dangerous and useless) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a69628ced9d71209a59dcdfb7f5637265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref> &amp;</type>
        <definition>BoBase&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::operator=</definition>
        <argsstring>(const BoBase &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy is disabled (dangerous and useless) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a4d94db5c40b35bec292aebfd19b8fb3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::stats_enabled</definition>
        <argsstring>() const </argsstring>
        <name>stats_enabled</name>
        <briefdescription>
<para>return true if the statitics are enabled (they can be disabled to avoid dumping data, e.g. for unit tests) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="214" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a4c87b7618144f99027c294db3eb803f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::res_dir</definition>
        <argsstring>() const </argsstring>
        <name>res_dir</name>
        <briefdescription>
<para>return the name of the directory in which results (statistics) are written </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="217" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a855dc5de1d0732a25f4c9730ac50d0bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
        <definition>const std::vector&lt;Eigen::VectorXd&gt;&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::observations</definition>
        <argsstring>() const </argsstring>
        <name>observations</name>
        <briefdescription>
<para>return the vector of points of observations (observations can be multi-dimensional, hence the VectorXd) <ndash/> f(x) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="220" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ad3ba0dba1418df0ed8e79d4dd3cc907a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
        <definition>const std::vector&lt;Eigen::VectorXd&gt;&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::samples</definition>
        <argsstring>() const </argsstring>
        <name>samples</name>
        <briefdescription>
<para>return the list of the points that have been evaluated so far (x) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="223" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ac3d643d5a668edf22ad053bfc54ea090" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::current_iteration</definition>
        <argsstring>() const </argsstring>
        <name>current_iteration</name>
        <briefdescription>
<para>return the current iteration number </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="226" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a5470e106c4584a30636cafb6fbad6d73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::total_iterations</definition>
        <argsstring>() const </argsstring>
        <name>total_iterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="228" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ac533d6397b0c0fa5ba0a4d03e0545fa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::add_new_sample</definition>
        <argsstring>(const Eigen::VectorXd &amp;s, const Eigen::VectorXd &amp;v)</argsstring>
        <name>add_new_sample</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new sample / observation pair<itemizedlist>
<listitem><para>does not update the model!</para></listitem><listitem><para>we don&apos;t add NaN and inf observations </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="233" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a70e8e4fea1b56aedc943fe62170659e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StateFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::eval_and_add</definition>
        <argsstring>(const StateFunction &amp;seval, const Eigen::VectorXd &amp;sample)</argsstring>
        <name>eval_and_add</name>
        <param>
          <type>const StateFunction &amp;</type>
          <declname>seval</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>sample</declname>
        </param>
        <briefdescription>
<para>Evaluate a sample and add the result to the &apos;database&apos; (sample / observations vectors) <ndash/> it does not update the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="243" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="243" bodyend="246"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1abe536fcebd87061aa4b53a3ed7866b0d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StateFunction</type>
          </param>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_init</definition>
        <argsstring>(const StateFunction &amp;seval, const AggregatorFunction &amp;afun, bool reset=true)</argsstring>
        <name>_init</name>
        <param>
          <type>const StateFunction &amp;</type>
          <declname>seval</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="250" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="250" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a5d74170de29d0ec6621f13a3078f4733" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BO</type>
          </param>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_stop</definition>
        <argsstring>(const BO &amp;bo, const AggregatorFunction &amp;afun) const </argsstring>
        <name>_stop</name>
        <param>
          <type>const BO &amp;</type>
          <declname>bo</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="264" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a5e99d6f9477fb21579df54a4e11ae279" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BO</type>
          </param>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_update_stats</definition>
        <argsstring>(BO &amp;bo, const AggregatorFunction &amp;afun)</argsstring>
        <name>_update_stats</name>
        <param>
          <type>BO &amp;</type>
          <declname>bo</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="271" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="271" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1aac8bb14bc2c5c586e0392e9029e13921" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_make_res_dir</definition>
        <argsstring>()</argsstring>
        <name>_make_res_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="277" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="277" bodyend="284"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst

Base class for Bayesian optimizers

Parameters:
  - ``bool Params::bayes_opt_bobase::stats_enabled``: activate / deactivate the statistics

This class is templated by several types with default values (thanks to boost::parameters).

+----------------+---------+---------+---------------+
|type            |typedef  | argument| default       |
+================+=========+=========+===============+
|init. func.     |init_t   | initfun | RandomSampling|
+----------------+---------+---------+---------------+
|model           |model_t  | modelfun| GP&lt;...&gt;       |
+----------------+---------+---------+---------------+
|acquisition fun.|aqui_t   | acquifun| GP_UCB        |
+----------------+---------+---------+---------------+
|statistics      | stat_t  | statfun | see below     |
+----------------+---------+---------+---------------+
|stopping crit.  | stop_t  | stopcrit| MaxIterations |
+----------------+---------+---------+---------------+</verbatim></para><para>For GP, the default value is: <computeroutput><ref refid="classlimbo_1_1model_1_1_g_p" kindref="compound">model::GP</ref>&lt;Params, kf_t, mean_t, opt_t&gt;&gt;</computeroutput>,<itemizedlist>
<listitem><para>with <computeroutput>kf_t = <ref refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d" kindref="compound">kernel::SquaredExpARD</ref>&lt;Params&gt;</computeroutput></para></listitem><listitem><para>with <computeroutput>mean_t = <ref refid="structlimbo_1_1mean_1_1_data" kindref="compound">mean::Data</ref>&lt;Params&gt;</computeroutput></para></listitem><listitem><para>with <computeroutput>opt_t = <ref refid="structlimbo_1_1model_1_1gp_1_1_kernel_l_f_opt" kindref="compound">model::gp::KernelLFOpt</ref>&lt;Params&gt;</computeroutput></para></listitem></itemizedlist>
</para><para>(meaning: kernel with automatic relevance determination and mean equals to the mean of the input data, that is, center the data automatically)</para><para>For Statistics, the default value is: <computeroutput>boost::fusion::vector&lt;<ref refid="structlimbo_1_1stat_1_1_samples" kindref="compound">stat::Samples</ref>&lt;Params&gt;, <ref refid="structlimbo_1_1stat_1_1_aggregated_observations" kindref="compound">stat::AggregatedObservations</ref>&lt;Params&gt;, <ref refid="structlimbo_1_1stat_1_1_console_summary" kindref="compound">stat::ConsoleSummary</ref>&lt;Params&gt;&gt;</computeroutput></para><para>Example of customization:<itemizedlist>
<listitem><para><computeroutput>using Kernel_t = <ref refid="structlimbo_1_1kernel_1_1_matern_five_halves" kindref="compound">kernel::MaternFiveHalves</ref>&lt;Params&gt;;</computeroutput></para></listitem><listitem><para><computeroutput>using Mean_t = <ref refid="structlimbo_1_1mean_1_1_data" kindref="compound">mean::Data</ref>&lt;Params&gt;;</computeroutput></para></listitem><listitem><para><computeroutput>using GP_t = <ref refid="classlimbo_1_1model_1_1_g_p" kindref="compound">model::GP</ref>&lt;Params, Kernel_t, Mean_t&gt;;</computeroutput></para></listitem><listitem><para><computeroutput>using Acqui_t = <ref refid="classlimbo_1_1acqui_1_1_u_c_b" kindref="compound">acqui::UCB</ref>&lt;Params, GP_t&gt;;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classlimbo_1_1bayes__opt_1_1_b_optimizer" kindref="compound">bayes_opt::BOptimizer</ref>&lt;Params, modelfun&lt;GP_t&gt;, acquifun&lt;Acqui_t&gt;&gt; opt;</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="43">
        <label>limbo::experimental::bayes_opt::Ehvi&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1experimental_1_1bayes__opt_1_1_ehvi"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>limbo::experimental::bayes_opt::CBOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1experimental_1_1bayes__opt_1_1_c_b_optimizer"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_bo_base"/>
      </node>
      <node id="41">
        <label>limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_b_optimizer"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>limbo::experimental::bayes_opt::BoMulti&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1experimental_1_1bayes__opt_1_1_bo_multi"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="177" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="177" bodyend="294"/>
    <listofallmembers>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a7a8d0ecbcff360edb4c83c6a545bea09" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_current_iteration</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1abe536fcebd87061aa4b53a3ed7866b0d" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_init</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1aac8bb14bc2c5c586e0392e9029e13921" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_make_res_dir</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a3676c6bc6f38819c99486974bccf05fe" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_observations</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a91d255800e3146a76359c2ce5bcb0376" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_res_dir</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a778d3eaf7d64e2217f1fe37d0881fa34" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a09b5fbcfc790cc627b55f63a938435cd" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_stat</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5d74170de29d0ec6621f13a3078f4733" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_stop</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a58888768b28ed0fcbcd8d34e862388eb" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_stopping_criteria</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1af5e472562bba7135a3d89eebb9c33dde" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_total_iterations</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5e99d6f9477fb21579df54a4e11ae279" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_update_stats</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5abe502b49e1ee70d5e00f27f95f5dff" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>acquisition_function_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac533d6397b0c0fa5ba0a4d03e0545fa2" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>add_new_sample</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a800d7d9dec5ac0c12b93150f12db9be3" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>args</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad361278c23693c4220eaa9a9de5d3333" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>BoBase</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a1a50eebb8a6efd528582ea871a0879a0" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>BoBase</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac3d643d5a668edf22ad053bfc54ea090" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>current_iteration</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a70e8e4fea1b56aedc943fe62170659e4" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>eval_and_add</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0cd0e388e42c62bc38e02c096d8ae245" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>init_function_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5e23d523dd2a16b866a2660721b937bb" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>model_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a855dc5de1d0732a25f4c9730ac50d0bd" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>observations</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a69628ced9d71209a59dcdfb7f5637265" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>operator=</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad64c1fe61c97f4540914018439f96a0a" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>params_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4c87b7618144f99027c294db3eb803f6" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>res_dir</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad3ba0dba1418df0ed8e79d4dd3cc907a" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4dfe2a37a52a4a964bce83cc580bff2e" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>Stat</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a407dede091900c86f4bf8001273c26e2" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>stat_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4d94db5c40b35bec292aebfd19b8fb3d" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>stats_enabled</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1af3ce6ecc075e643cb1bdde0fb139ce21" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>stopping_criteria_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a313e0d0d1eeceb3d090fbc2aafcc1984" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>StoppingCriteria</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5470e106c4584a30636cafb6fbad6d73" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>total_iterations</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
