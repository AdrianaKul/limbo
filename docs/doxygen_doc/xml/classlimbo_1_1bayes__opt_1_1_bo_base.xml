<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classlimbo_1_1bayes__opt_1_1_bo_base" kind="class" language="C++" prot="public">
    <compoundname>limbo::bayes_opt::BoBase</compoundname>
    <derivedcompoundref refid="classlimbo_1_1bayes__opt_1_1_b_optimizer" prot="public" virt="non-virtual">limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classlimbo_1_1bayes__opt_1_1experimental_1_1_i_m_g_p_o" prot="public" virt="non-virtual">limbo::bayes_opt::experimental::IMGPO&lt; Params, A1, A2, A3, A4, A5 &gt;</derivedcompoundref>
    <includes refid="bo__base_8hpp" local="no">limbo/bayes_opt/bo_base.hpp</includes>
    <innerclass refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults" prot="public">limbo::bayes_opt::BoBase::defaults</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Params</declname>
        <defname>Params</defname>
      </param>
      <param>
        <type>class</type>
        <declname>A1</declname>
        <defname>A1</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A2</declname>
        <defname>A2</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A3</declname>
        <defname>A3</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A4</declname>
        <defname>A4</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A5</declname>
        <defname>A5</defname>
        <defval>boost::parameter::void_</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a3fb955ab00c385f5deb56f3d18211d3d" prot="public" static="no">
        <type>Params</type>
        <definition>typedef Params limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::params_t</definition>
        <argsstring></argsstring>
        <name>params_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="140" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a75c1ae9e7268016c6f767c56bcede7d2" prot="public" static="no">
        <type>class_signature::bind&lt; A1, A2, A3, A4, A5 &gt;::type</type>
        <definition>typedef class_signature::bind&lt;A1, A2, A3, A4, A5&gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="156" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1aa4cf2b36051de6b46e75621f0b9ed642" prot="public" static="no">
        <type>boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a75c1ae9e7268016c6f767c56bcede7d2" kindref="member">args</ref>, tag::initfun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1acbba74470eccef31c3f2518a3c57200c" kindref="member">defaults::init_t</ref> &gt;::type</type>
        <definition>typedef boost::parameter::binding&lt;args, tag::initfun, typename defaults::init_t&gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::init_function_t</definition>
        <argsstring></argsstring>
        <name>init_function_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="157" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a02b14991b62e0f8c9bcf834220ed62e4" prot="public" static="no">
        <type>boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a75c1ae9e7268016c6f767c56bcede7d2" kindref="member">args</ref>, tag::acquifun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a4ba658f2746db27c5f3abdb24d2a2f85" kindref="member">defaults::acqui_t</ref> &gt;::type</type>
        <definition>typedef boost::parameter::binding&lt;args, tag::acquifun, typename defaults::acqui_t&gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::acquisition_function_t</definition>
        <argsstring></argsstring>
        <name>acquisition_function_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="158" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a1ddc93cc023a2d7d527deb4cc750624e" prot="public" static="no">
        <type>boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a75c1ae9e7268016c6f767c56bcede7d2" kindref="member">args</ref>, tag::modelfun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a6f8da6a743f6a87096f8e0b9d4411503" kindref="member">defaults::model_t</ref> &gt;::type</type>
        <definition>typedef boost::parameter::binding&lt;args, tag::modelfun, typename defaults::model_t&gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::model_t</definition>
        <argsstring></argsstring>
        <name>model_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="159" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a0da8155a1a5be0999e112655ec3d610e" prot="public" static="no">
        <type>boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a75c1ae9e7268016c6f767c56bcede7d2" kindref="member">args</ref>, tag::statsfun, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a70f64f21a85e2fa25063709abd5a2467" kindref="member">defaults::stat_t</ref> &gt;::type</type>
        <definition>typedef boost::parameter::binding&lt;args, tag::statsfun, typename defaults::stat_t&gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::Stat</definition>
        <argsstring></argsstring>
        <name>Stat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="160" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ac9ab3f37c746dcf70ef7096a89dd1b6c" prot="public" static="no">
        <type>boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a75c1ae9e7268016c6f767c56bcede7d2" kindref="member">args</ref>, tag::stopcrit, typename <ref refid="structlimbo_1_1bayes__opt_1_1_bo_base_1_1defaults_1a3cb5d1c8866494a7a641e6f3b4367d75" kindref="member">defaults::stop_t</ref> &gt;::type</type>
        <definition>typedef boost::parameter::binding&lt;args, tag::stopcrit, typename defaults::stop_t&gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::StoppingCriteria</definition>
        <argsstring></argsstring>
        <name>StoppingCriteria</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="161" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ad045a21de8950f3671f6b156f2271e44" prot="public" static="no">
        <type>boost::mpl::if_&lt; boost::fusion::traits::is_sequence&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac9ab3f37c746dcf70ef7096a89dd1b6c" kindref="member">StoppingCriteria</ref> &gt;, <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac9ab3f37c746dcf70ef7096a89dd1b6c" kindref="member">StoppingCriteria</ref>, boost::fusion::vector&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac9ab3f37c746dcf70ef7096a89dd1b6c" kindref="member">StoppingCriteria</ref> &gt; &gt;::type</type>
        <definition>typedef boost::mpl::if_&lt;boost::fusion::traits::is_sequence&lt;StoppingCriteria&gt;, StoppingCriteria, boost::fusion::vector&lt;StoppingCriteria&gt; &gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::stopping_criteria_t</definition>
        <argsstring></argsstring>
        <name>stopping_criteria_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="163" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a67aac9bd22ae3de346afe7ffe5b564d3" prot="public" static="no">
        <type>boost::mpl::if_&lt; boost::fusion::traits::is_sequence&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0da8155a1a5be0999e112655ec3d610e" kindref="member">Stat</ref> &gt;, <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0da8155a1a5be0999e112655ec3d610e" kindref="member">Stat</ref>, boost::fusion::vector&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0da8155a1a5be0999e112655ec3d610e" kindref="member">Stat</ref> &gt; &gt;::type</type>
        <definition>typedef boost::mpl::if_&lt;boost::fusion::traits::is_sequence&lt;Stat&gt;, Stat, boost::fusion::vector&lt;Stat&gt; &gt;::type limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::stat_t</definition>
        <argsstring></argsstring>
        <name>stat_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="164" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a84e57f1869a99078e53ced17343ac774" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_res_dir</definition>
        <argsstring></argsstring>
        <name>_res_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="262" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a4feb20daf2651e59e72075b39eec8f59" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_current_iteration</definition>
        <argsstring></argsstring>
        <name>_current_iteration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="263" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a68c5c2f212388c79df10560caad8bb38" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_total_iterations</definition>
        <argsstring></argsstring>
        <name>_total_iterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="264" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ac25aa71f803dd7024dd26c05f72ae695" prot="private" static="no" mutable="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad045a21de8950f3671f6b156f2271e44" kindref="member">stopping_criteria_t</ref></type>
        <definition>stopping_criteria_t limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_stopping_criteria</definition>
        <argsstring></argsstring>
        <name>_stopping_criteria</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="265" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a09d4dea3917efbb29ec8e164d43c7b41" prot="private" static="no" mutable="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a67aac9bd22ae3de346afe7ffe5b564d3" kindref="member">stat_t</ref></type>
        <definition>stat_t limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_stat</definition>
        <argsstring></argsstring>
        <name>_stat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="266" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ab8a715111a1ac7564d733fb339527bbf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_observations</definition>
        <argsstring></argsstring>
        <name>_observations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="268" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ada34bf82a55bab3500bee62db24d36b9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_samples</definition>
        <argsstring></argsstring>
        <name>_samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="269" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a2f73b3ee86fe72c9100ebce72a77f0fa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_bl_samples</definition>
        <argsstring></argsstring>
        <name>_bl_samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="270" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a1602cb9a6fa728d8181ee7ec080dd441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::BoBase</definition>
        <argsstring>()</argsstring>
        <name>BoBase</name>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="167" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a807db4b72b87b720303b4b56fce44899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::BoBase</definition>
        <argsstring>(const BoBase &amp;other)=delete</argsstring>
        <name>BoBase</name>
        <param>
          <type>const <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy is disabled (dangerous and useless) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a91b7f3f0295d4e6e2a1263f3882817bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref> &amp;</type>
        <definition>BoBase&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::operator=</definition>
        <argsstring>(const BoBase &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy is disabled (dangerous and useless) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a124b963cab48ee23698b3cbd2dd1e496" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::stats_enabled</definition>
        <argsstring>() const </argsstring>
        <name>stats_enabled</name>
        <briefdescription>
<para>return true if the statitics are enabled (they can be disabled to avoid dumping data, e.g. for unit tests) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="175" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a5f589de569a67fe5a645ee0b7fe1173c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::res_dir</definition>
        <argsstring>() const </argsstring>
        <name>res_dir</name>
        <briefdescription>
<para>return the name of the directory in which results (statistics) are written </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="178" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a1c5e2b7c9aaae38770505011dfcb61ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
        <definition>const std::vector&lt;Eigen::VectorXd&gt;&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::observations</definition>
        <argsstring>() const </argsstring>
        <name>observations</name>
        <briefdescription>
<para>return the vector of points of observations (observations can be multi-dimensional, hence the VectorXd) <ndash/> f(x) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="181" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a3a68d0a9fce39ae5575c63a57a549f58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
        <definition>const std::vector&lt;Eigen::VectorXd&gt;&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::samples</definition>
        <argsstring>() const </argsstring>
        <name>samples</name>
        <briefdescription>
<para>return the list of the points that have been evaluated so far (x) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="184" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1aa85b7824943ae2ee35b50b446f6740c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
        <definition>const std::vector&lt;Eigen::VectorXd&gt;&amp; limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::bl_samples</definition>
        <argsstring>() const </argsstring>
        <name>bl_samples</name>
        <briefdescription>
<para>return the list of blacklisted points </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="187" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1abbd79a26fafeb6ea8f09df782972caa0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::current_iteration</definition>
        <argsstring>() const </argsstring>
        <name>current_iteration</name>
        <briefdescription>
<para>return the current iteration number </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="190" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a923fec38c8f1c473fdd9cf35b395b471" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::total_iterations</definition>
        <argsstring>() const </argsstring>
        <name>total_iterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="192" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a77482415d06619f49e6b0300fc950f96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::add_new_sample</definition>
        <argsstring>(const Eigen::VectorXd &amp;s, const Eigen::VectorXd &amp;v)</argsstring>
        <name>add_new_sample</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new sample / observation pair<itemizedlist>
<listitem><para>does not update the model!</para></listitem><listitem><para>we don&apos;t add NaN and inf observations </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="197" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a7197b0c20d5644ec44070432555eb49b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::add_new_bl_sample</definition>
        <argsstring>(const Eigen::VectorXd &amp;s)</argsstring>
        <name>add_new_bl_sample</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Add a new blacklisted sample. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="206" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a49f332ebc6e526169c619e6bc4430116" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StateFunction</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::eval_and_add</definition>
        <argsstring>(const StateFunction &amp;seval, const Eigen::VectorXd &amp;sample)</argsstring>
        <name>eval_and_add</name>
        <param>
          <type>const StateFunction &amp;</type>
          <declname>seval</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>sample</declname>
        </param>
        <briefdescription>
<para>Evaluate a sample and add the result to the &apos;database&apos; (sample / observations vectors) <ndash/> it does not update the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="210" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="210" bodyend="221"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a4cc05a20ad287b63fd6435f976ec4127" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StateFunction</type>
          </param>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_init</definition>
        <argsstring>(const StateFunction &amp;seval, const AggregatorFunction &amp;afun, bool reset=true)</argsstring>
        <name>_init</name>
        <param>
          <type>const StateFunction &amp;</type>
          <declname>seval</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="225" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="225" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ae30a7be66c10bba1ed8cea1985b1efd9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BO</type>
          </param>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_stop</definition>
        <argsstring>(const BO &amp;bo, const AggregatorFunction &amp;afun) const </argsstring>
        <name>_stop</name>
        <param>
          <type>const BO &amp;</type>
          <declname>bo</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="240" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1a8f4ce2bc7f83a8b751e0c6287b06a4a4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BO</type>
          </param>
          <param>
            <type>typename AggregatorFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_update_stats</definition>
        <argsstring>(BO &amp;bo, const AggregatorFunction &amp;afun, bool blacklisted)</argsstring>
        <name>_update_stats</name>
        <param>
          <type>BO &amp;</type>
          <declname>bo</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blacklisted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="247" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="247" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_bo_base_1ae3475b41667f815e2cc1268c6825ba36" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;::_make_res_dir</definition>
        <argsstring>()</argsstring>
        <name>_make_res_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="253" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="253" bodyend="260"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst

Base class for Bayesian optimizers

Parameters:
  - ``bool Params::bayes_opt_bobase::stats_enabled``: activate / deactivate the statistics

This class is templated by several types with default values (thanks to boost::parameters).

+----------------+---------+---------+---------------+
|type            |typedef  | argument| default       |
+================+=========+=========+===============+
|init. func.     |init_t   | initfun | RandomSampling|
+----------------+---------+---------+---------------+
|model           |model_t  | modelfun| GP&lt;...&gt;       |
+----------------+---------+---------+---------------+
|acquisition fun.|aqui_t   | acquifun| GP_UCB        |
+----------------+---------+---------+---------------+
|statistics      | stat_t  | statfun | see below     |
+----------------+---------+---------+---------------+
|stopping crit.  | stop_t  | stopcrit| MaxIterations |
+----------------+---------+---------+---------------+</verbatim></para><para>For GP, the default value is: <computeroutput><ref refid="classlimbo_1_1model_1_1_g_p" kindref="compound">model::GP</ref>&lt;Params, kf_t, mean_t, opt_t&gt;&gt;</computeroutput>,<itemizedlist>
<listitem><para>with <computeroutput>kf_t = <ref refid="structlimbo_1_1kernel_1_1_squared_exp_a_r_d" kindref="compound">kernel::SquaredExpARD</ref>&lt;Params&gt;</computeroutput></para></listitem><listitem><para>with <computeroutput>mean_t = <ref refid="structlimbo_1_1mean_1_1_data" kindref="compound">mean::Data</ref>&lt;Params&gt;</computeroutput></para></listitem><listitem><para>with <computeroutput>opt_t = <ref refid="structlimbo_1_1model_1_1gp_1_1_kernel_l_f_opt" kindref="compound">model::gp::KernelLFOpt</ref>&lt;Params&gt;</computeroutput></para></listitem></itemizedlist>
</para><para>(meaning: kernel with automatic relevance determination and mean equals to the mean of the input data, that is, center the data automatically)</para><para>For Statistics, the default value is: <computeroutput>boost::fusion::vector&lt;<ref refid="structlimbo_1_1stat_1_1_samples" kindref="compound">stat::Samples</ref>&lt;Params&gt;, <ref refid="structlimbo_1_1stat_1_1_aggregated_observations" kindref="compound">stat::AggregatedObservations</ref>&lt;Params&gt;, <ref refid="structlimbo_1_1stat_1_1_console_summary" kindref="compound">stat::ConsoleSummary</ref>&lt;Params&gt;&gt;</computeroutput></para><para>Example of customization:<itemizedlist>
<listitem><para><computeroutput>typedef <ref refid="structlimbo_1_1kernel_1_1_matern_five_halfs" kindref="compound">kernel::MaternFiveHalfs</ref>&lt;Params&gt; Kernel_t;</computeroutput></para></listitem><listitem><para><computeroutput>typedef <ref refid="structlimbo_1_1mean_1_1_data" kindref="compound">mean::Data</ref>&lt;Params&gt; Mean_t;</computeroutput></para></listitem><listitem><para><computeroutput>typedef <ref refid="classlimbo_1_1model_1_1_g_p" kindref="compound">model::GP</ref>&lt;Params, Kernel_t, Mean_t&gt; GP_t;</computeroutput></para></listitem><listitem><para><computeroutput>typedef <ref refid="classlimbo_1_1acqui_1_1_u_c_b" kindref="compound">acqui::UCB</ref>&lt;Params, GP_t&gt; Acqui_t;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classlimbo_1_1bayes__opt_1_1_b_optimizer" kindref="compound">bayes_opt::BOptimizer</ref>&lt;Params, modelfun&lt;GP_t&gt;, acquifun&lt;Acqui_t&gt;&gt; opt;</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="35">
        <label>limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_b_optimizer"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>limbo::bayes_opt::experimental::IMGPO&lt; Params, A1, A2, A3, A4, A5 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1experimental_1_1_i_m_g_p_o"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_bo_base"/>
      </node>
    </inheritancegraph>
    <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" line="138" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/bo_base.hpp" bodystart="138" bodyend="271"/>
    <listofallmembers>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a2f73b3ee86fe72c9100ebce72a77f0fa" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_bl_samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4feb20daf2651e59e72075b39eec8f59" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_current_iteration</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4cc05a20ad287b63fd6435f976ec4127" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_init</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ae3475b41667f815e2cc1268c6825ba36" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_make_res_dir</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ab8a715111a1ac7564d733fb339527bbf" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_observations</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a84e57f1869a99078e53ced17343ac774" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_res_dir</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ada34bf82a55bab3500bee62db24d36b9" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a09d4dea3917efbb29ec8e164d43c7b41" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_stat</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ae30a7be66c10bba1ed8cea1985b1efd9" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_stop</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac25aa71f803dd7024dd26c05f72ae695" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_stopping_criteria</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a68c5c2f212388c79df10560caad8bb38" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_total_iterations</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a8f4ce2bc7f83a8b751e0c6287b06a4a4" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>_update_stats</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a02b14991b62e0f8c9bcf834220ed62e4" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>acquisition_function_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a7197b0c20d5644ec44070432555eb49b" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>add_new_bl_sample</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a77482415d06619f49e6b0300fc950f96" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>add_new_sample</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a75c1ae9e7268016c6f767c56bcede7d2" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>args</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1aa85b7824943ae2ee35b50b446f6740c6" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>bl_samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a1602cb9a6fa728d8181ee7ec080dd441" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>BoBase</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a807db4b72b87b720303b4b56fce44899" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>BoBase</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1abbd79a26fafeb6ea8f09df782972caa0" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>current_iteration</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a49f332ebc6e526169c619e6bc4430116" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>eval_and_add</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1aa4cf2b36051de6b46e75621f0b9ed642" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>init_function_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a1ddc93cc023a2d7d527deb4cc750624e" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>model_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a1c5e2b7c9aaae38770505011dfcb61ec" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>observations</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a91b7f3f0295d4e6e2a1263f3882817bd" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>operator=</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a3fb955ab00c385f5deb56f3d18211d3d" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>params_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5f589de569a67fe5a645ee0b7fe1173c" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>res_dir</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a3a68d0a9fce39ae5575c63a57a549f58" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a0da8155a1a5be0999e112655ec3d610e" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>Stat</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a67aac9bd22ae3de346afe7ffe5b564d3" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>stat_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a124b963cab48ee23698b3cbd2dd1e496" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>stats_enabled</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad045a21de8950f3671f6b156f2271e44" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>stopping_criteria_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac9ab3f37c746dcf70ef7096a89dd1b6c" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>StoppingCriteria</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a923fec38c8f1c473fdd9cf35b395b471" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BoBase</scope><name>total_iterations</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
