<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classlimbo_1_1bayes__opt_1_1_b_optimizer" kind="class" language="C++" prot="public">
    <compoundname>limbo::bayes_opt::BOptimizer</compoundname>
    <basecompoundref refid="classlimbo_1_1bayes__opt_1_1_bo_base" prot="public" virt="non-virtual">limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</basecompoundref>
    <includes refid="boptimizer_8hpp" local="no">limbo/bayes_opt/boptimizer.hpp</includes>
    <innerclass refid="structlimbo_1_1bayes__opt_1_1_b_optimizer_1_1defaults" prot="public">limbo::bayes_opt::BOptimizer::defaults</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Params</declname>
        <defname>Params</defname>
      </param>
      <param>
        <type>class</type>
        <declname>A1</declname>
        <defname>A1</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A2</declname>
        <defname>A2</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A3</declname>
        <defname>A3</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A4</declname>
        <defname>A4</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A5</declname>
        <defname>A5</defname>
        <defval>boost::parameter::void_</defval>
      </param>
      <param>
        <type>class</type>
        <declname>A6</declname>
        <defname>A6</defname>
        <defval>boost::parameter::void_</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1acfc58fcdd57f2f5520e6ba175677c319" prot="public" static="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref>&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</type>
        <definition>typedef BoBase&lt;Params, A1, A2, A3, A4, A5, A6&gt; limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::base_t</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <briefdescription>
<para>link to the corresponding <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref> (useful for typedefs) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="130" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1aaddb85f5014ba377c9e2e3a64db87678" prot="public" static="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a151af5c7eef92a82d8813bb2e067d267" kindref="member">base_t::model_t</ref></type>
        <definition>typedef base_t::model_t limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::model_t</definition>
        <argsstring></argsstring>
        <name>model_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="131" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1ae0a407a5eba370a6a30acda501cd4ddc" prot="public" static="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a200a43abb6c95d2d99660898b36f2200" kindref="member">base_t::acquisition_function_t</ref></type>
        <definition>typedef base_t::acquisition_function_t limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::acquisition_function_t</definition>
        <argsstring></argsstring>
        <name>acquisition_function_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="132" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1afd4c6a7d361de59fac5aa3a332ea0149" prot="public" static="no">
        <type>boptimizer_signature::bind&lt; A1, A2, A3, A4, A5, A6 &gt;::type</type>
        <definition>typedef boptimizer_signature::bind&lt;A1, A2, A3, A4, A5, A6&gt;::type limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="134" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a18dc1b593c859b8f89450a31f80fb592" prot="public" static="no">
        <type>boost::parameter::binding&lt; <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a3844c259aa1e59d0241f90390aa6f7fa" kindref="member">args</ref>, tag::acquiopt, typename <ref refid="structlimbo_1_1bayes__opt_1_1_b_optimizer_1_1defaults_1af714505103b93f5a2028030a192cc955" kindref="member">defaults::acquiopt_t</ref> &gt;::type</type>
        <definition>typedef boost::parameter::binding&lt;args, tag::acquiopt, typename defaults::acquiopt_t&gt;::type limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::acqui_optimizer_t</definition>
        <argsstring></argsstring>
        <name>acqui_optimizer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="135" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a0014224c378fefa42967f1008771939d" prot="private" static="no" mutable="no">
        <type><ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a151af5c7eef92a82d8813bb2e067d267" kindref="member">model_t</ref></type>
        <definition>model_t limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::_model</definition>
        <argsstring></argsstring>
        <name>_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="201" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a731de253fe21749b9a00e609aae0386f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StateFunction</type>
          </param>
          <param>
            <type>typename AggregatorFunction</type>
            <defval><ref refid="structlimbo_1_1_first_elem" kindref="compound">FirstElem</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::optimize</definition>
        <argsstring>(const StateFunction &amp;sfun, const AggregatorFunction &amp;afun=AggregatorFunction(), bool reset=true)</argsstring>
        <name>optimize</name>
        <param>
          <type>const StateFunction &amp;</type>
          <declname>sfun</declname>
        </param>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
          <defval>AggregatorFunction()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>reset</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>The main function (run the Bayesian optimization algorithm) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="139" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="139" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1aac35dbb6504e5a1b7d5fc9252c5e6a51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AggregatorFunction</type>
            <defval><ref refid="structlimbo_1_1_first_elem" kindref="compound">FirstElem</ref></defval>
          </param>
        </templateparamlist>
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd&amp; limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::best_observation</definition>
        <argsstring>(const AggregatorFunction &amp;afun=AggregatorFunction()) const </argsstring>
        <name>best_observation</name>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
          <defval>AggregatorFunction()</defval>
        </param>
        <briefdescription>
<para>return the best observation so far (i.e. max(f(x))) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="180" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1ad3a19271e9d00827648f83b0dccc66b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AggregatorFunction</type>
            <defval><ref refid="structlimbo_1_1_first_elem" kindref="compound">FirstElem</ref></defval>
          </param>
        </templateparamlist>
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd&amp; limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::best_sample</definition>
        <argsstring>(const AggregatorFunction &amp;afun=AggregatorFunction()) const </argsstring>
        <name>best_sample</name>
        <param>
          <type>const AggregatorFunction &amp;</type>
          <declname>afun</declname>
          <defval>AggregatorFunction()</defval>
        </param>
        <briefdescription>
<para>return the best sample so far (i.e. the argmax(f(x))) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="190" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="190" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a1f338242d56d6a2b97245ca3bcaf991f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a151af5c7eef92a82d8813bb2e067d267" kindref="member">model_t</ref> &amp;</type>
        <definition>const model_t&amp; limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;::model</definition>
        <argsstring>() const </argsstring>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="198" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="198" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The classic Bayesian optimization algorithm.</para><para><verbatim>embed:rst
References: :cite:`brochu2010tutorial,Mockus2013`
</verbatim></para><para>This class takes the same template parameters as <ref refid="classlimbo_1_1bayes__opt_1_1_bo_base" kindref="compound">BoBase</ref>. It adds: <verbatim>embed:rst
+---------------------+------------+----------+---------------+
|type                 |typedef     | argument | default       |
+=====================+============+==========+===============+
|acqui. optimizer     |acqui_opt_t | acquiopt | see below     |
+---------------------+------------+----------+---------------+
</verbatim></para><para>The default value of acqui_opt_t is:<itemizedlist>
<listitem><para><computeroutput><ref refid="structlimbo_1_1opt_1_1_n_l_opt_no_grad" kindref="compound">opt::NLOptNoGrad</ref>&lt;Params, nlopt::GN_DIRECT_L_RAND&gt;</computeroutput> if NLOpt was found in <computeroutput>waf configure</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structlimbo_1_1opt_1_1_cmaes" kindref="compound">opt::Cmaes</ref>&lt;Params&gt;</computeroutput> if libcmaes was found but NLOpt was not found</para></listitem><listitem><para><computeroutput><ref refid="structlimbo_1_1opt_1_1_grid_search" kindref="compound">opt::GridSearch</ref>&lt;Params&gt;</computeroutput> otherwise (please do not use this: the algorithm will not work as expected!) </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="51">
        <label>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_bo_base"/>
      </node>
      <node id="50">
        <label>limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_b_optimizer"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="53">
        <label>limbo::bayes_opt::BoBase&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_bo_base"/>
      </node>
      <node id="52">
        <label>limbo::bayes_opt::BOptimizer&lt; Params, A1, A2, A3, A4, A5, A6 &gt;</label>
        <link refid="classlimbo_1_1bayes__opt_1_1_b_optimizer"/>
        <childnode refid="53" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" line="116" column="1" bodyfile="/tmp/doc_limbo/limbo/src/limbo/bayes_opt/boptimizer.hpp" bodystart="116" bodyend="202"/>
    <listofallmembers>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a0014224c378fefa42967f1008771939d" prot="private" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>_model</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a18dc1b593c859b8f89450a31f80fb592" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>acqui_optimizer_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1ae0a407a5eba370a6a30acda501cd4ddc" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>acquisition_function_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a8694d4bbc5c373d067790ec31fb42a44" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>add_new_bl_sample</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac533d6397b0c0fa5ba0a4d03e0545fa2" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>add_new_sample</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1afd4c6a7d361de59fac5aa3a332ea0149" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>args</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1acfc58fcdd57f2f5520e6ba175677c319" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>base_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1aac35dbb6504e5a1b7d5fc9252c5e6a51" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>best_observation</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1ad3a19271e9d00827648f83b0dccc66b0" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>best_sample</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1aa84e215cffa97a4e287aad3690f89635" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>bl_samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad361278c23693c4220eaa9a9de5d3333" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>BoBase</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a1a50eebb8a6efd528582ea871a0879a0" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>BoBase</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ac3d643d5a668edf22ad053bfc54ea090" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>current_iteration</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a387fba7bf70aa9410e1c04f035694f34" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>eval_and_add</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a734d263ce8c37ae2c5233f9e4499828c" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>init_function_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a1f338242d56d6a2b97245ca3bcaf991f" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>model</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1aaddb85f5014ba377c9e2e3a64db87678" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>model_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a855dc5de1d0732a25f4c9730ac50d0bd" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>observations</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a69628ced9d71209a59dcdfb7f5637265" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>operator=</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_b_optimizer_1a731de253fe21749b9a00e609aae0386f" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>optimize</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ae46fa6c574ca2a2c4368c8c9d3ff63e5" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>params_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4c87b7618144f99027c294db3eb803f6" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>res_dir</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1ad3ba0dba1418df0ed8e79d4dd3cc907a" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>samples</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1adda0d6bf0fa0def996eb0af7e8a84f3f" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>Stat</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a17d395abfdd3158f238c83764ba68fd0" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>stat_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a4d94db5c40b35bec292aebfd19b8fb3d" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>stats_enabled</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a8dfcab20696e6c85665b150e9881c010" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>stopping_criteria_t</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a06717d469296323cc277e3769b828e98" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>StoppingCriteria</name></member>
      <member refid="classlimbo_1_1bayes__opt_1_1_bo_base_1a5470e106c4584a30636cafb6fbad6d73" prot="public" virt="non-virtual"><scope>limbo::bayes_opt::BOptimizer</scope><name>total_iterations</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
